{"version":3,"sources":["StateProvider.jsx","firebase.js","EditLabelsDialogContent.jsx","Header.jsx","DisplayCardNoteOptions.jsx","DisplayCard.jsx","NoteOptions.jsx","InputCard.jsx","InputField.jsx","Notes.jsx","Login.jsx","Register.jsx","DisplayCardArchiveOptions.jsx","DisplayCardArchives.jsx","ArchiveData.jsx","Archives.jsx","DisplayCardTrash.jsx","TrashData.jsx","Trash.jsx","RemindersDisplayCards.jsx","Reminders.jsx","PageNotFound.jsx","App.jsx","serviceWorker.js","reducer.js","index.js"],"names":["StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","EditLabelsDialogContent","useState","labelsArray","setLabelsArray","newLabel","setNewLabel","user","newLabelLeftButton","setNewLabelLeftButton","newLabelRightButton","setNewLabelRightButton","existingLabelTrigger","setExistingLabelTrigger","existingLabelId","setExistingLabelId","useEffect","collection","doc","uid","onSnapshot","snapshot","docs","map","document","data","editLabel","event","currentTarget","id","getElementById","setAttribute","focus","onNewLabelInputFocus","deleteExistingLabel","preventDefault","delete","className","IconButton","onClick","style","outline","border","blur","type","onChange","e","target","onFocus","placeholder","set","label","then","add","merge","console","log","readOnly","useStyles","makeStyles","list","width","fullList","Header","classes","React","top","left","bottom","right","state","setState","view","mode","dispatch","labelsDialog","setLabelsDialog","history","useHistory","useDarkMode","progress","setProgress","onAuthStateChanged","authUser","displayName","anchor","toggleDrawer","open","key","searchContent","setSearchContent","SwipeableDrawer","onClose","onOpen","clsx","role","onKeyDown","List","ListItem","src","alt","Divider","to","textDecoration","color","button","ListItemIcon","ListItemText","Dialog","maxWidth","scroll","DialogTitle","DialogContent","onRequestSearch","CircularProgress","setTimeout","signOut","push","DisplayCardNoteOptions","setBackgroundColorValue","addToDisplayTags","setReminderDateValue","setReminderTimeValue","reminderDate","reminderTime","undoData","deleteNote","archiveNote","reminderPopupMenu","setReminderPopupMenu","labelsPopupMenu","setLabelsPopupMenu","palettePopupMenu","setPalettePopupMenu","anchorRefReminderPopup","useRef","anchorRefLabelsPopup","anchorRefPalettePopup","handleCloseReminderPopup","current","contains","handleListKeyDownReminderPopup","prevOpenReminderPopup","handleCloseLabelsPopup","handleListKeyDownLabelsPopup","prevOpenLabelsPopup","handleClosePalettePopup","handleListKeyDownPalettePopup","prevOpenPalettePopup","ref","aria-controls","undefined","aria-haspopup","Popper","anchorEl","transition","disablePortal","TransitionProps","placement","Grow","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","MenuItem","innerText","GridList","cols","cellHeight","index","attributes","getNamedItem","nodeValue","Avatar","backgroundColor","DisplayCard","previoustitle","previousnote","previousdisplayTags","previousbackgroundColor","previousreminderDate","previousreminderTime","previouspinnedStatus","displayDeletedSnackBarMessage","setDisplayNoteIdInDeleteSnackBar","setDisplayNoteIdInArchiveSnackBar","displayArchivedSnackBarMessage","title","setTitle","note","setNote","displayTags","setDisplayTags","setBackgroundColor","setReminderDate","setReminderTime","pinnedStatus","setPinedStatus","displayOptions","setDisplayOptions","remindBy","date","time","handleClick","handleDelete","handleTagClick","length","trim","labels","isPinned","onMouseEnter","onMouseLeave","TextareaAutosize","autoFocus","Zoom","in","FormControlLabel","control","Checkbox","icon","checkedIcon","checked","Chip","onDelete","size","tag","displayTagsArray","tagIndex","indexOf","splice","handleTagDelete","includes","NoteOptions","closeCard","Button","InputCard","closeCardComponent","setNewNoteIdInArchiveSnackBar","displayNewNoteArchiveSnackbarMessage","catch","error","InputField","renderInputComponent","display","margin","marginTop","height","fontSize","theme","close","padding","spacing","Notes","snackPackArchive","setSnackPackArchive","openArchiveSnackBar","setOpenArchiveSnackBar","messageInfoArchive","setMessageInfoArchive","snackPackNewNoteArchive","setSnackPackNewNoteArchive","openNewNoteArchiveSnackBar","setOpenNewNoteArchiveSnackBar","messageInfoNewNoteArchive","setMessageInfoNewNoteArchive","snackPackUndoNewNoteArchive","setSnackPackUndoNewNoteArchive","openUndoNewNoteArchiveSnackBar","setOpenUndoNewNoteArchiveSnackBar","messageInfoUndoNewNoteArchive","setMessageInfoUndoNewNoteArchive","snackPackUndoArchive","setSnackPackUndoArchive","openUndoArchiveSnackBar","setOpenUndoArchiveSnackBar","messageInfoUndoArchive","setMessageInfoUndoArchive","snackPackUndoDelete","setSnackPackUndoDelete","openUndoDeleteSnackBar","setOpenUndoDeleteSnackBar","messageInfoUndoDelete","setMessageInfoUndoDelete","snackPackDelete","setSnackPackDelete","openDeleteSnackBar","setOpenDeleteSnackBar","messageInfoDelete","setMessageInfoDelete","notes","setNotes","newNoteIdInArchiveSnackBar","displayNoteIdInArchiveSnackBar","displayNoteIdInDeleteSnackBar","prev","slice","handleClickArchive","message","Date","getTime","handleCloseArchive","reason","handleCloseUndoArchive","handleCloseUndoDelete","handleClickDelete","handleCloseDelete","handleCloseNewNoteArchive","handleCloseUndoNewNoteArchive","pinnedDocs","setPinnedDocs","unPinnedDocs","setUnpinnedDocs","where","setInputArea","saveNoteOnClickAway","displaySnackBar","JSON","parse","stringify","inputArea","opacity","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onExited","action","Fragment","aria-label","handleClickUndoDelete","handleClickUndoNewNoteArchive","root","marginRight","instructions","marginBottom","useStylesPasswordField","flexWrap","withoutLabel","textField","Login","email","setEmail","password","setPassword","emailError","setEmailError","passwordError","setPasswordError","invalidEmail","setInvalidEmail","userDoc","setUserDoc","activeStep","setActiveStep","classesPasswordField","showPassword","values","setValues","handleClickShowPassword","handleMouseDownPassword","usernameComponent","TextField","variant","onBlur","helperText","disabled","classname","href","validateUsername","passwordComponent","avatar","handleBack","FormControl","InputLabel","htmlFor","OutlinedInput","endAdornment","InputAdornment","position","onMouseDown","edge","Visibility","VisibilityOff","labelWidth","marginLeft","prop","validatePassword","steps","handleNext","prevActiveStep","exists","LinearProgress","signInWithEmailAndPassword","alert","step","getStepContent","Register","username","setUsername","firstname","setFirstname","lastname","setLastname","emailInvalid","setEmailInvalid","passwordInvalid","setPasswordInvalid","usernameInvalid","setUsernameInvalid","firstnameValid","setFirstnameValid","lastnameValid","setLastnameValid","emailValid","setEmailValid","passwordValid","setPasswordValid","usernameValid","setUsernameValid","emailEmpty","setEmailEmpty","passwordEmpty","setPasswordEmpty","usernameEmpty","setUsernameEmpty","firstnameEmpty","setFirstnameEmpty","lastnameEmpty","setLastnameEmpty","emailExists","setEmailExists","usernameExists","setUsernameExists","defaultValue","createUserWithEmailAndPassword","updateProfile","endsWith","unArchiveNote","DisplayCardArchives","setDisplayNoteIdInUnarchiveSnackBar","displayUnarchivedSnackBarMessage","DisplayCardArchiveOptions","ArchiveData","archivedData","pinnedData","unpinnedData","Archives","archives","setArchives","setPinnedData","setUnpinnedData","DisplayCardTrash","deleteForeverNote","displayRestoreSnackBarMessage","TrashData","trashData","deleteForeverDialog","setDeleteForeverDialog","deleteForeverNoteId","setDeleteForeverNoteId","DialogActions","Trash","trash","setTrash","RemindersDisplayCards","reminderDateDocs","reminderTimeDocs","reminderDateTimeDocs","Reminders","reminderDateTime","setReminderDateTime","PageNotFound","App","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.786188cf.chunk.js","sourcesContent":["import React, { createContext, useContext, useReducer } from \"react\";\r\n\r\n//prepares the data layer\r\nexport const StateContext = createContext();\r\n\r\n//Wrap the complete data and provide data layer to every component\r\nexport const StateProvider = ({ reducer, initialState, children }) => (\r\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n    {children} {/*  data is here */}\r\n  </StateContext.Provider>\r\n);\r\n\r\n//pull information from the data layer\r\nexport const useStateValue = () => useContext(StateContext);\r\n","import firebase from 'firebase';\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBG952PtOIFiofoel7wTvOw0P4xPvmzBr4\",\r\n    authDomain: \"goooglekeep.firebaseapp.com\",\r\n    databaseURL: \"https://goooglekeep.firebaseio.com\",\r\n    projectId: \"goooglekeep\",\r\n    storageBucket: \"goooglekeep.appspot.com\",\r\n    messagingSenderId: \"267916557276\",\r\n    appId: \"1:267916557276:web:41343b7bea71f42cac2d19\",\r\n    measurementId: \"G-RQ648HNVW1\"\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig)\r\n\r\nconst db = firebaseApp.firestore()\r\nconst auth = firebase.auth()\r\n\r\nexport { db, auth }\r\n","import React, { useEffect, useState } from \"react\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport \"./EditLabelsDialogContent.css\";\r\nimport DeleteRoundedIcon from \"@material-ui/icons/DeleteRounded\";\r\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport { db } from \"./firebase\";\r\n\r\nfunction EditLabelsDialogContent() {\r\n  const [labelsArray, setLabelsArray] = useState([]);\r\n  const [newLabel, setNewLabel] = useState(\"\");\r\n  const [{ user }, dispatch] = useStateValue();\r\n  const [newLabelLeftButton, setNewLabelLeftButton] = useState(\"AddIcon\");\r\n  const [newLabelRightButton, setNewLabelRightButton] = useState(null);\r\n  const [existingLabelTrigger, setExistingLabelTrigger] = useState(false);\r\n  const [existingLabelId, setExistingLabelId] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      db.collection(\"users\")\r\n        .doc(user?.uid)\r\n        .collection(\"labels\")\r\n        .onSnapshot((snapshot) =>\r\n          setLabelsArray(snapshot.docs.map((document) => document.data()))\r\n        );\r\n    }\r\n  }, []);\r\n\r\n  const saveNewLabel = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (newLabel !== \"\") {\r\n      if (existingLabelTrigger) {\r\n        db.collection(\"users\")\r\n          .doc(user?.uid)\r\n          .collection(\"labels\")\r\n          .doc(existingLabelId)\r\n          .set({\r\n            id: existingLabelId,\r\n            label: newLabel,\r\n          })\r\n          .then(() => {\r\n            setNewLabel(\"\");\r\n            setExistingLabelId(\"\");\r\n            setNewLabelLeftButton(\"AddIcon\");\r\n            setNewLabelRightButton(null);\r\n            setExistingLabelTrigger(false);\r\n          });\r\n      } else {\r\n        db.collection(\"users\")\r\n          .doc(user?.uid)\r\n          .collection(\"labels\")\r\n          .add({\r\n            label: newLabel,\r\n          })\r\n          .then((document) => {\r\n            document.set({ id: document.id }, { merge: true });\r\n            setNewLabel(\"\");\r\n            setNewLabelLeftButton(\"AddIcon\");\r\n            setNewLabelRightButton(null);\r\n          });\r\n        console.log(\"new label saved\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const editLabel = (event) => {\r\n    setNewLabel(event.currentTarget.value);\r\n    setExistingLabelId(event.currentTarget.id);\r\n    document.getElementById(\"label__input\").setAttribute(\"value\", newLabel);\r\n    document.getElementById(\"label__input\").focus();\r\n    setExistingLabelTrigger(true);\r\n  };\r\n\r\n  const onNewLabelInputFocus = () => {\r\n    setNewLabelLeftButton(\"ClearIcon\");\r\n    setNewLabelRightButton(\"CheckIcon\");\r\n    document.getElementById(\"label__input\").focus();\r\n  };\r\n\r\n  const onNewLabelInputBlur = () => {\r\n    setNewLabel(\"\");\r\n    setNewLabelLeftButton(\"AddIcon\");\r\n    setNewLabelRightButton(null);\r\n    document.getElementById(\"label__input\").blur();\r\n  };\r\n\r\n  const deleteExistingLabel = (event) => {\r\n    event.preventDefault();\r\n    db.collection(\"users\")\r\n      .doc(user?.uid)\r\n      .collection(\"labels\")\r\n      .doc(event.currentTarget.id)\r\n      .delete();\r\n  };\r\n\r\n  return (\r\n    <div className=\"edit__labels__content\">\r\n      <form className=\"new__label__form\">\r\n        {newLabelLeftButton === \"AddIcon\" ? (\r\n          <IconButton\r\n            onClick={onNewLabelInputFocus}\r\n            style={{ outline: \"none\", border: \"none\" }}\r\n          >\r\n            <AddIcon />\r\n          </IconButton>\r\n        ) : (\r\n          <IconButton\r\n            onClick={onNewLabelInputBlur}\r\n            style={{ outline: \"none\", border: \"none\" }}\r\n          >\r\n            <ClearIcon />\r\n          </IconButton>\r\n        )}\r\n        <input\r\n          id=\"label__input\"\r\n          type=\"text\"\r\n          onChange={(e) => setNewLabel(e.target.value)}\r\n          value={newLabel}\r\n          onFocus={onNewLabelInputFocus}\r\n          placeholder=\"Create/Edit Label\"\r\n        />\r\n        {newLabelRightButton ? (\r\n          <IconButton\r\n            type=\"submit\"\r\n            onClick={saveNewLabel}\r\n            style={{ outline: \"none\", border: \"none\" }}\r\n          >\r\n            <CheckIcon />\r\n          </IconButton>\r\n        ) : null}\r\n      </form>\r\n      {labelsArray.map((label) => (\r\n        <div className=\"display__labels\">\r\n          <IconButton\r\n            type=\"submit\"\r\n            id={label.id}\r\n            onClick={deleteExistingLabel}\r\n            style={{ outline: \"none\", border: \"none\" }}\r\n          >\r\n            <DeleteRoundedIcon />\r\n          </IconButton>\r\n          <input\r\n            type=\"text\"\r\n            className=\"display__label__input\"\r\n            readOnly\r\n            value={label.label}\r\n          />\r\n          {/* <p>{label.label}</p> */}\r\n          <IconButton\r\n            type=\"submit\"\r\n            id={label.id}\r\n            value={label.label}\r\n            onClick={editLabel}\r\n            style={{ outline: \"none\", border: \"none\" }}\r\n          >\r\n            <EditRoundedIcon />\r\n          </IconButton>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditLabelsDialogContent;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Header.css\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  makeStyles,\r\n  SwipeableDrawer,\r\n  Divider,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport SearchBar from \"material-ui-search-bar\";\r\nimport clsx from \"clsx\";\r\nimport CloudDoneIcon from \"@material-ui/icons/CloudDone\";\r\nimport GridOnIcon from \"@material-ui/icons/GridOn\";\r\nimport Brightness4Icon from \"@material-ui/icons/Brightness4\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport EmojiObjectsIcon from \"@material-ui/icons/EmojiObjects\";\r\nimport AddAlertIcon from \"@material-ui/icons/AddAlert\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport ArchiveIcon from \"@material-ui/icons/Archive\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport { auth, db } from \"./firebase\";\r\nimport EditLabelsDialogContent from \"./EditLabelsDialogContent\";\r\nimport useDarkMode from \"use-dark-mode\";\r\nimport Brightness7Icon from \"@material-ui/icons/Brightness7\";\r\nimport DnsIcon from \"@material-ui/icons/Dns\";\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: \"auto\",\r\n  },\r\n});\r\n\r\nfunction Header() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n\r\n  const [{ user, view, mode }, dispatch] = useStateValue();\r\n  const [labelsDialog, setLabelsDialog] = useState(false);\r\n  //useHistory() to redirect to routes\r\n  const history = useHistory();\r\n\r\n  const darkMode = useDarkMode(false);\r\n\r\n  const [progress, setProgress] = useState(false);\r\n\r\n  //fires once per component mount\r\n  useEffect(() => {\r\n    //this event fires on auth state change - signIn/signOut event\r\n    auth.onAuthStateChanged((authUser) => {\r\n      console.log(\"User is \", authUser);\r\n      if (authUser) {\r\n        //user has logged in/ state is maintained\r\n\r\n        //dispatching/pushing user state to data layer\r\n        dispatch({\r\n          type: \"SET_USER\",\r\n          user: authUser,\r\n        });\r\n      } else {\r\n        //user has logged out\r\n\r\n        //dispatching/pushing user state to data layer\r\n        dispatch({\r\n          type: \"SET_USER\",\r\n          user: null,\r\n        });\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  if (user) {\r\n    console.log(user.displayName);\r\n  }\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (\r\n      event &&\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const [searchContent, setSearchContent] = useState(\"\");\r\n  const getSearchResults = () => {\r\n    console.log(\"search results found for ==> \", searchContent);\r\n  };\r\n\r\n  const list = (anchor) => (\r\n    <div\r\n      className={clsx(classes.list, {\r\n        [classes.fullList]: anchor === \"top\" || anchor === \"bottom\",\r\n      })}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <List>\r\n        <ListItem>\r\n          <img\r\n            className=\"header__brand__logo header__options__left__item\"\r\n            src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/d/df/Google_Keep_icon.svg/1024px-Google_Keep_icon.svg.png\"\r\n            alt=\"header brand\"\r\n          />\r\n          <h2 className=\"header__brand__name header__options__left__item\">\r\n            Keep\r\n          </h2>\r\n        </ListItem>\r\n        <Divider />\r\n        <Link to=\"/notes\" style={{ textDecoration: \"none\", color: \"black\" }}>\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <EmojiObjectsIcon />\r\n            </ListItemIcon>\r\n            <ListItemText>Notes</ListItemText>\r\n          </ListItem>\r\n        </Link>\r\n        <Link\r\n          to=\"/reminders\"\r\n          style={{ textDecoration: \"none\", color: \"black\" }}\r\n        >\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <AddAlertIcon />\r\n            </ListItemIcon>\r\n            <ListItemText>Reminders</ListItemText>\r\n          </ListItem>\r\n        </Link>\r\n        <ListItem button onClick={() => setLabelsDialog(true)}>\r\n          <ListItemIcon>\r\n            <EditIcon />\r\n          </ListItemIcon>\r\n          <ListItemText>Edit Labels</ListItemText>\r\n        </ListItem>\r\n        <Link to=\"/archives\" style={{ textDecoration: \"none\", color: \"black\" }}>\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <ArchiveIcon />\r\n            </ListItemIcon>\r\n            <ListItemText>Archives</ListItemText>\r\n          </ListItem>\r\n        </Link>\r\n        <Link to=\"/trash\" style={{ textDecoration: \"none\", color: \"black\" }}>\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <DeleteIcon />\r\n            </ListItemIcon>\r\n            <ListItemText>Trash</ListItemText>\r\n          </ListItem>\r\n        </Link>\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  const signOutUser = () => {\r\n    auth.signOut().then(() => history.push(\"/login\"));\r\n  };\r\n\r\n  const toggleListAndGridView = () => {\r\n    if (view === \"grid\") {\r\n      dispatch({\r\n        type: \"SET_VIEW\",\r\n        view: \"list\",\r\n      });\r\n    } else if (view === \"list\") {\r\n      dispatch({\r\n        type: \"SET_VIEW\",\r\n        view: \"grid\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const refresh = () => {\r\n    setProgress(true);\r\n    setTimeout(() => {\r\n      setProgress(false);\r\n    }, 1000);\r\n  };\r\n\r\n  const toggleLightAndDarkMode = () => {\r\n    if (mode === \"light\") {\r\n      dispatch({\r\n        type: \"SET_MODE\",\r\n        mode: \"dark\",\r\n      });\r\n    } else if (mode === \"dark\") {\r\n      dispatch({\r\n        type: \"SET_MODE\",\r\n        mode: \"light\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <SwipeableDrawer\r\n        anchor=\"left\"\r\n        open={state[\"left\"]}\r\n        onClose={toggleDrawer(\"left\", false)}\r\n        onOpen={toggleDrawer(\"left\", true)}\r\n      >\r\n        {list(\"left\")}\r\n      </SwipeableDrawer>\r\n\r\n      <Dialog\r\n        open={labelsDialog}\r\n        onClose={() => setLabelsDialog(false)}\r\n        maxWidth=\"lg\"\r\n        scroll=\"paper\"\r\n      >\r\n        <DialogTitle>Edit Labels</DialogTitle>\r\n        <DialogContent>\r\n          <EditLabelsDialogContent />\r\n        </DialogContent>\r\n      </Dialog>\r\n\r\n      <div className=\"header__options\">\r\n        <div className=\"header__options__left__corner\">\r\n          <IconButton\r\n            onClick={toggleDrawer(\"left\", true)}\r\n            className=\"header__menu__toggler header__options__left__item\"\r\n            style={{ outline: \"none\", border: \"none\" }}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <img\r\n            className=\"header__brand__logo header__options__left__item\"\r\n            src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/d/df/Google_Keep_icon.svg/1024px-Google_Keep_icon.svg.png\"\r\n            alt=\"header brand\"\r\n          />\r\n          <h2 className=\"header__brand__name header__options__left__item\">\r\n            Keep\r\n          </h2>\r\n          <SearchBar\r\n            className=\"header__searchbar header__options__left__item\"\r\n            value={searchContent}\r\n            onChange={(value) => setSearchContent(value)}\r\n            onRequestSearch={getSearchResults}\r\n          />\r\n        </div>\r\n        <div className=\"header__options__right__corner\">\r\n          {progress ? (\r\n            <CircularProgress />\r\n          ) : (\r\n            <IconButton\r\n              className=\"header__refresh\"\r\n              onClick={refresh}\r\n              style={{ outline: \"none\", border: \"none\" }}\r\n            >\r\n              <CloudDoneIcon />\r\n            </IconButton>\r\n          )}\r\n          <IconButton\r\n            className=\"header__display__toggler\"\r\n            onClick={toggleListAndGridView}\r\n            style={{ outline: \"none\", border: \"none\" }}\r\n          >\r\n            {view === \"grid\" ? <DnsIcon /> : <GridOnIcon />}\r\n          </IconButton>\r\n          <IconButton\r\n            className=\"header__darkmode__toggler\"\r\n            onClick={toggleLightAndDarkMode}\r\n            style={{ outline: \"none\", border: \"none\" }}\r\n          >\r\n            {mode === \"light\" ? <Brightness4Icon /> : <Brightness7Icon />}\r\n          </IconButton>\r\n          <IconButton\r\n            className=\"header__signout\"\r\n            onClick={signOutUser}\r\n            style={{ outline: \"none\", border: \"none\" }}\r\n          >\r\n            <AccountCircleIcon />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./NoteOptions.css\";\r\nimport AddAlertIcon from \"@material-ui/icons/AddAlert\";\r\nimport {\r\n  Avatar,\r\n  ClickAwayListener,\r\n  GridList,\r\n  Grow,\r\n  IconButton,\r\n  MenuItem,\r\n  MenuList,\r\n  Paper,\r\n  Popper,\r\n} from \"@material-ui/core\";\r\nimport LabelIcon from \"@material-ui/icons/Label\";\r\nimport PaletteSharpIcon from \"@material-ui/icons/PaletteSharp\";\r\nimport ArchiveRoundedIcon from \"@material-ui/icons/ArchiveRounded\";\r\nimport UndoRoundedIcon from \"@material-ui/icons/UndoRounded\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { db } from \"./firebase\";\r\n\r\nconst DisplayCardNoteOptions = ({\r\n  setBackgroundColorValue,\r\n  addToDisplayTags,\r\n  setReminderDateValue,\r\n  setReminderTimeValue,\r\n  reminderDate,\r\n  reminderTime,\r\n  undoData,\r\n  deleteNote,\r\n  archiveNote,\r\n}) => {\r\n  // const classes = useStyles();\r\n  const [reminderPopupMenu, setReminderPopupMenu] = React.useState(false);\r\n  const [labelsPopupMenu, setLabelsPopupMenu] = React.useState(false);\r\n  const [palettePopupMenu, setPalettePopupMenu] = React.useState(false);\r\n  const anchorRefReminderPopup = React.useRef(null);\r\n  const anchorRefLabelsPopup = React.useRef(null);\r\n  const anchorRefPalettePopup = React.useRef(null);\r\n\r\n  const [{ user }] = useStateValue();\r\n  const [labelsArray, setLabelsArray] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      db.collection(\"users\")\r\n        .doc(user?.uid)\r\n        .collection(\"labels\")\r\n        .onSnapshot((snapshot) =>\r\n          setLabelsArray(snapshot.docs.map((document) => document.data()))\r\n        );\r\n    }\r\n  }, []);\r\n\r\n  const handleToggleReminderPopup = () => {\r\n    setReminderPopupMenu((prevOpenReminderPopup) => !prevOpenReminderPopup);\r\n  };\r\n\r\n  const handleCloseReminderPopup = (event) => {\r\n    if (\r\n      anchorRefReminderPopup.current &&\r\n      anchorRefReminderPopup.current.contains(event.target)\r\n    ) {\r\n      return;\r\n    }\r\n    setReminderPopupMenu(false);\r\n  };\r\n\r\n  function handleListKeyDownReminderPopup(event) {\r\n    if (event.key === \"Tab\") {\r\n      event.preventDefault();\r\n      setReminderPopupMenu(false);\r\n    }\r\n  }\r\n\r\n  // return focus to the button when we transitioned from !open -> open\r\n  const prevOpenReminderPopup = React.useRef(reminderPopupMenu);\r\n  React.useEffect(() => {\r\n    if (prevOpenReminderPopup.current === true && reminderPopupMenu === false) {\r\n      anchorRefReminderPopup.current.focus();\r\n    }\r\n\r\n    prevOpenReminderPopup.current = reminderPopupMenu;\r\n  }, [reminderPopupMenu]);\r\n\r\n  const handleToggleLabelsPopup = () => {\r\n    setLabelsPopupMenu((prevOpenLabelsPopup) => !prevOpenLabelsPopup);\r\n  };\r\n\r\n  const handleCloseLabelsPopup = (event) => {\r\n    if (\r\n      anchorRefLabelsPopup.current &&\r\n      anchorRefLabelsPopup.current.contains(event.target)\r\n    ) {\r\n      return;\r\n    }\r\n    setLabelsPopupMenu(false);\r\n  };\r\n\r\n  function handleListKeyDownLabelsPopup(event) {\r\n    if (event.key === \"Tab\") {\r\n      event.preventDefault();\r\n      setLabelsPopupMenu(false);\r\n    }\r\n  }\r\n\r\n  // return focus to the button when we transitioned from !open -> open\r\n  const prevOpenLabelsPopup = React.useRef(labelsPopupMenu);\r\n  React.useEffect(() => {\r\n    if (prevOpenLabelsPopup.current === true && labelsPopupMenu === false) {\r\n      anchorRefLabelsPopup.current.focus();\r\n    }\r\n\r\n    prevOpenLabelsPopup.current = labelsPopupMenu;\r\n  }, [labelsPopupMenu]);\r\n\r\n  const handleTogglePalettePopup = () => {\r\n    setPalettePopupMenu((prevOpenPalettePopup) => !prevOpenPalettePopup);\r\n  };\r\n\r\n  const handleClosePalettePopup = (event) => {\r\n    if (\r\n      anchorRefPalettePopup.current &&\r\n      anchorRefPalettePopup.current.contains(event.target)\r\n    ) {\r\n      return;\r\n    }\r\n    setPalettePopupMenu(false);\r\n  };\r\n\r\n  function handleListKeyDownPalettePopup(event) {\r\n    if (event.key === \"Tab\") {\r\n      event.preventDefault();\r\n      setPalettePopupMenu(false);\r\n    }\r\n  }\r\n\r\n  const prevOpenPalettePopup = React.useRef(palettePopupMenu);\r\n  React.useEffect(() => {\r\n    if (prevOpenPalettePopup.current === true && palettePopupMenu === false) {\r\n      anchorRefPalettePopup.current.focus();\r\n    }\r\n\r\n    prevOpenPalettePopup.current = labelsPopupMenu;\r\n  }, [palettePopupMenu]);\r\n\r\n  const deleteThisNote = () => {\r\n    deleteNote();\r\n  };\r\n\r\n  const archiveThisNote = () => {\r\n    archiveNote();\r\n  };\r\n\r\n  return (\r\n    <div className=\"button__options\">\r\n      <div className=\"button__options__left\">\r\n        <IconButton\r\n          ref={anchorRefReminderPopup}\r\n          aria-controls={\r\n            reminderPopupMenu ? \"reminder-menu-list-grow\" : undefined\r\n          }\r\n          aria-haspopup=\"true\"\r\n          onClick={handleToggleReminderPopup}\r\n          style={{ outline: \"none\", border: \"none\" }}\r\n        >\r\n          <AddAlertIcon />\r\n        </IconButton>\r\n\r\n        <Popper\r\n          open={reminderPopupMenu}\r\n          anchorEl={anchorRefReminderPopup.current}\r\n          role={undefined}\r\n          transition\r\n          disablePortal\r\n        >\r\n          {({ TransitionProps, placement }) => (\r\n            <Grow\r\n              {...TransitionProps}\r\n              style={{\r\n                transformOrigin:\r\n                  placement === \"bottom\" ? \"center top\" : \"center bottom\",\r\n              }}\r\n            >\r\n              <Paper>\r\n                <ClickAwayListener onClickAway={handleCloseReminderPopup}>\r\n                  <MenuList\r\n                    autoFocusItem={reminderPopupMenu}\r\n                    id=\"reminder-menu-list-grow\"\r\n                    onKeyDown={handleListKeyDownReminderPopup}\r\n                  >\r\n                    <MenuItem>\r\n                      <input\r\n                        type=\"date\"\r\n                        value={reminderDate}\r\n                        onChange={(e) => setReminderDateValue(e.target.value)}\r\n                      />\r\n                    </MenuItem>\r\n                    <MenuItem>\r\n                      <input\r\n                        type=\"time\"\r\n                        onChange={(e) => setReminderTimeValue(e.target.value)}\r\n                        value={reminderTime}\r\n                      />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={handleCloseReminderPopup}>\r\n                      Close\r\n                    </MenuItem>\r\n                  </MenuList>\r\n                </ClickAwayListener>\r\n              </Paper>\r\n            </Grow>\r\n          )}\r\n        </Popper>\r\n\r\n        <IconButton\r\n          ref={anchorRefLabelsPopup}\r\n          aria-controls={labelsPopupMenu ? \"labels-menu-list-grow\" : undefined}\r\n          aria-haspopup=\"true\"\r\n          onClick={handleToggleLabelsPopup}\r\n          style={{ outline: \"none\", border: \"none\" }}\r\n        >\r\n          <LabelIcon />\r\n        </IconButton>\r\n\r\n        <Popper\r\n          open={labelsPopupMenu}\r\n          anchorEl={anchorRefLabelsPopup.current}\r\n          role={undefined}\r\n          transition\r\n          disablePortal\r\n        >\r\n          {({ TransitionProps, placement }) => (\r\n            <Grow\r\n              {...TransitionProps}\r\n              style={{\r\n                transformOrigin:\r\n                  placement === \"bottom\" ? \"center top\" : \"center bottom\",\r\n              }}\r\n            >\r\n              <Paper>\r\n                <ClickAwayListener onClickAway={handleCloseLabelsPopup}>\r\n                  <MenuList\r\n                    autoFocusItem={labelsPopupMenu}\r\n                    id=\"labels-menu-list-grow\"\r\n                    onKeyDown={handleListKeyDownLabelsPopup}\r\n                  >\r\n                    {labelsArray.map((label) => (\r\n                      <MenuItem\r\n                        button\r\n                        onClick={(event) => {\r\n                          addToDisplayTags(event.currentTarget.innerText);\r\n                          handleCloseLabelsPopup(event);\r\n                        }}\r\n                      >\r\n                        {label.label}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </MenuList>\r\n                </ClickAwayListener>\r\n              </Paper>\r\n            </Grow>\r\n          )}\r\n        </Popper>\r\n\r\n        <IconButton\r\n          ref={anchorRefPalettePopup}\r\n          aria-controls={\r\n            palettePopupMenu ? \"palette-menu-list-grow\" : undefined\r\n          }\r\n          aria-haspopup=\"true\"\r\n          onClick={handleTogglePalettePopup}\r\n          style={{ outline: \"none\", border: \"none\" }}\r\n        >\r\n          <PaletteSharpIcon />\r\n        </IconButton>\r\n\r\n        <Popper\r\n          open={palettePopupMenu}\r\n          anchorEl={anchorRefPalettePopup.current}\r\n          role={undefined}\r\n          transition\r\n          disablePortal\r\n        >\r\n          {({ TransitionProps, placement }) => (\r\n            <Grow\r\n              {...TransitionProps}\r\n              style={{\r\n                transformOrigin:\r\n                  placement === \"bottom\" ? \"center top\" : \"center bottom\",\r\n              }}\r\n            >\r\n              <Paper>\r\n                <ClickAwayListener onClickAway={handleClosePalettePopup}>\r\n                  <GridList\r\n                    autoFocusItem={palettePopupMenu}\r\n                    id=\"palette-menu-list-grow\"\r\n                    onKeyDown={handleListKeyDownPalettePopup}\r\n                    cols={10}\r\n                    cellHeight=\"auto\"\r\n                  >\r\n                    {[\r\n                      \"transparent\",\r\n                      \"lightblue\",\r\n                      \"blanchedalmond\",\r\n                      \"plum\",\r\n                      \"wheat\",\r\n                      \"lightgreen\",\r\n                      \"goldenrod\",\r\n                      \"pink\",\r\n                      \"lightskyblue\",\r\n                      \"lightsalmon\",\r\n                    ].map((color, index) => (\r\n                      <MenuItem\r\n                        key={index}\r\n                        id={index}\r\n                        button\r\n                        onClick={(event) => {\r\n                          setBackgroundColorValue(\r\n                            event.currentTarget.attributes.getNamedItem(\"value\")\r\n                              .nodeValue\r\n                          );\r\n                        }}\r\n                        value={color}\r\n                      >\r\n                        <Avatar\r\n                          style={{\r\n                            backgroundColor: color,\r\n                            color: color,\r\n                            border: \"1px solid lightgray\",\r\n                          }}\r\n                        />\r\n                      </MenuItem>\r\n                    ))}\r\n                  </GridList>\r\n                </ClickAwayListener>\r\n              </Paper>\r\n            </Grow>\r\n          )}\r\n        </Popper>\r\n\r\n        <IconButton\r\n          onClick={archiveThisNote}\r\n          style={{ outline: \"none\", border: \"none\" }}\r\n        >\r\n          <ArchiveRoundedIcon />\r\n        </IconButton>\r\n        <IconButton\r\n          onClick={() => undoData()}\r\n          style={{ outline: \"none\", border: \"none\" }}\r\n        >\r\n          <UndoRoundedIcon />\r\n        </IconButton>\r\n      </div>\r\n      <IconButton\r\n        onClick={deleteThisNote}\r\n        style={{ outline: \"none\", border: \"none\" }}\r\n      >\r\n        <DeleteIcon />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DisplayCardNoteOptions;\r\n","import {\r\n  Checkbox,\r\n  Chip,\r\n  ClickAwayListener,\r\n  FormControlLabel,\r\n  TextareaAutosize,\r\n  Zoom,\r\n} from \"@material-ui/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"./DisplayCard.css\";\r\nimport DisplayCardNoteOptions from \"./DisplayCardNoteOptions\";\r\nimport CalendarTodayIcon from \"@material-ui/icons/CalendarToday\";\r\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\r\nimport RoomIcon from \"@material-ui/icons/Room\";\r\nimport ScheduleIcon from \"@material-ui/icons/Schedule\";\r\nimport EventAvailableIcon from \"@material-ui/icons/EventAvailable\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport { db } from \"./firebase\";\r\n\r\nfunction DisplayCard({\r\n  id,\r\n  previoustitle,\r\n  previousnote,\r\n  previousdisplayTags,\r\n  previousbackgroundColor,\r\n  previousreminderDate,\r\n  previousreminderTime,\r\n  previouspinnedStatus,\r\n  displayDeletedSnackBarMessage,\r\n  setDisplayNoteIdInDeleteSnackBar,\r\n  setDisplayNoteIdInArchiveSnackBar,\r\n  displayArchivedSnackBarMessage,\r\n}) {\r\n  const [{ user, view }] = useStateValue();\r\n  const [title, setTitle] = useState(\"\");\r\n  const [note, setNote] = useState(\"\");\r\n  const [displayTags, setDisplayTags] = useState([]);\r\n  const [backgroundColor, setBackgroundColor] = useState(\"transparent\");\r\n  const [reminderDate, setReminderDate] = useState(\"\");\r\n  const [reminderTime, setReminderTime] = useState(\"\");\r\n  const [pinnedStatus, setPinedStatus] = useState(false);\r\n  const [displayOptions, setDisplayOptions] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      setTitle(previoustitle);\r\n      setNote(previousnote);\r\n      setDisplayTags(previousdisplayTags);\r\n      setReminderDate(previousreminderDate);\r\n      setReminderTime(previousreminderTime);\r\n      setPinedStatus(previouspinnedStatus);\r\n      setBackgroundColor(previousbackgroundColor);\r\n    }\r\n  }, []);\r\n\r\n  const remindBy = (date, time) => {\r\n    if (date !== \"\" && time !== \"\") return \"dateAndTime\";\r\n    else if (date !== \"\" && time === \"\") return \"date\";\r\n    else if (date === \"\" && time !== \"\") return \"time\";\r\n    else return \"\";\r\n  };\r\n\r\n  const editExistingNote = () => {\r\n    if (\r\n      !(\r\n        title === \"\" &&\r\n        note === \"\" &&\r\n        displayTags.length === 0 &&\r\n        backgroundColor === \"transparent\" &&\r\n        reminderTime === \"\" &&\r\n        reminderDate === \"\"\r\n      )\r\n    ) {\r\n      db.collection(\"users\")\r\n        .doc(user?.uid)\r\n        .collection(\"notes\")\r\n        .doc(id)\r\n        .set(\r\n          {\r\n            id: id,\r\n            title: title.trim() !== \"\" ? title : \"Empty Note\",\r\n            note: note.trim() !== \"\" ? note : \"Empty Note\",\r\n            labels: displayTags,\r\n            reminderDate: reminderDate,\r\n            reminderTime: reminderTime,\r\n            remindBy: remindBy(reminderDate, reminderTime),\r\n            backgroundColor: backgroundColor,\r\n            isPinned: pinnedStatus,\r\n          },\r\n          { merge: true }\r\n        );\r\n    }\r\n  };\r\n\r\n  const handleClick = () => {\r\n    console.log(\"chip was clicked\");\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    if (reminderDate !== \"\" && reminderTime !== \"\") {\r\n      setReminderDate(\"\");\r\n      setReminderTime(\"\");\r\n    } else if (reminderDate !== \"\" && reminderTime === \"\") setReminderDate(\"\");\r\n    else if (reminderTime !== \"\" && reminderDate === \"\") setReminderTime(\"\");\r\n  };\r\n\r\n  const addToDisplayTags = (value) => {\r\n    const displayTagsArray = [...displayTags];\r\n    if (!displayTagsArray.includes(value)) displayTagsArray.push(value);\r\n    setDisplayTags(displayTagsArray);\r\n  };\r\n\r\n  const handleTagClick = () => {\r\n    console.log(\"tag was clicked\");\r\n  };\r\n\r\n  const handleTagDelete = (tag) => {\r\n    const displayTagsArray = [...displayTags];\r\n    const tagIndex = displayTagsArray.indexOf(tag);\r\n    displayTagsArray.splice(tagIndex, 1);\r\n    setDisplayTags(displayTagsArray);\r\n  };\r\n\r\n  const undoData = () => {\r\n    setTitle(previoustitle);\r\n    setNote(previousnote);\r\n    setReminderTime(previousreminderTime);\r\n    setReminderDate(previousreminderDate);\r\n    setDisplayTags(previousdisplayTags);\r\n    setBackgroundColor(previousbackgroundColor);\r\n    setPinedStatus(previouspinnedStatus);\r\n  };\r\n\r\n  const deleteNote = () => {\r\n    db.collection(\"users\")\r\n      .doc(user?.uid)\r\n      .collection(\"trash\")\r\n      .doc(id)\r\n      .set(\r\n        {\r\n          id: id,\r\n          title: title.trim() !== \"\" ? title : \"Empty Note\",\r\n          note: note.trim() !== \"\" ? note : \"Empty Note\",\r\n          labels: displayTags,\r\n          reminderDate: reminderDate,\r\n          reminderTime: reminderTime,\r\n          remindBy: remindBy(reminderDate, reminderTime),\r\n          backgroundColor: backgroundColor,\r\n          isPinned: pinnedStatus,\r\n        },\r\n        { merge: true }\r\n      );\r\n    db.collection(\"users\").doc(user?.uid).collection(\"notes\").doc(id).delete();\r\n    setDisplayNoteIdInDeleteSnackBar({\r\n      id: id,\r\n      title: title.trim() !== \"\" ? title : \"Empty Note\",\r\n      note: note.trim() !== \"\" ? note : \"Empty Note\",\r\n      labels: displayTags,\r\n      reminderDate: reminderDate,\r\n      reminderTime: reminderTime,\r\n      remindBy: remindBy(reminderDate, reminderTime),\r\n      backgroundColor: backgroundColor,\r\n      isPinned: pinnedStatus,\r\n    });\r\n    displayDeletedSnackBarMessage();\r\n  };\r\n\r\n  const archiveNote = () => {\r\n    db.collection(\"users\")\r\n      .doc(user?.uid)\r\n      .collection(\"archives\")\r\n      .doc(id)\r\n      .set(\r\n        {\r\n          id: id,\r\n          title: title.trim() !== \"\" ? title : \"Empty Note\",\r\n          note: note.trim() !== \"\" ? note : \"Empty Note\",\r\n          labels: displayTags,\r\n          reminderDate: reminderDate,\r\n          reminderTime: reminderTime,\r\n          remindBy: remindBy(reminderDate, reminderTime),\r\n          backgroundColor: backgroundColor,\r\n          isPinned: pinnedStatus,\r\n        },\r\n        { merge: true }\r\n      );\r\n    db.collection(\"users\").doc(user?.uid).collection(\"notes\").doc(id).delete();\r\n    setDisplayNoteIdInArchiveSnackBar({\r\n      id: id,\r\n      title: title.trim() !== \"\" ? title : \"Empty Note\",\r\n      note: note.trim() !== \"\" ? note : \"Empty Note\",\r\n      labels: displayTags,\r\n      reminderDate: reminderDate,\r\n      reminderTime: reminderTime,\r\n      remindBy: remindBy(reminderDate, reminderTime),\r\n      backgroundColor: backgroundColor,\r\n      isPinned: pinnedStatus,\r\n    });\r\n    displayArchivedSnackBarMessage();\r\n  };\r\n\r\n  return (\r\n    <ClickAwayListener onClickAway={editExistingNote}>\r\n      <div\r\n        className=\"display__card\"\r\n        onMouseEnter={() => setDisplayOptions(true)}\r\n        onMouseLeave={() => setDisplayOptions(false)}\r\n        style={{\r\n          backgroundColor: backgroundColor,\r\n          width: view === \"grid\" ? \"300px\" : \"100%\",\r\n        }}\r\n      >\r\n        <div className=\"text__data\">\r\n          <div className=\"display__card__title__component\">\r\n            <TextareaAutosize\r\n              placeholder=\"Title\"\r\n              onChange={(e) => setTitle(e.target.value)}\r\n              className=\"display__card__title__input\"\r\n              value={title}\r\n              autoFocus\r\n              style={{ backgroundColor: backgroundColor }}\r\n            />\r\n            <Zoom in={displayOptions}>\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    color=\"default\"\r\n                    id=\"display__pinned\"\r\n                    icon={<CheckBoxOutlineBlankIcon />}\r\n                    checkedIcon={<RoomIcon />}\r\n                    onChange={() => setPinedStatus(!pinnedStatus)}\r\n                    checked={pinnedStatus}\r\n                  />\r\n                }\r\n              />\r\n            </Zoom>\r\n          </div>\r\n          <TextareaAutosize\r\n            placeholder=\"Take a note...\"\r\n            onChange={(e) => setNote(e.target.value)}\r\n            className=\"display__note__input\"\r\n            value={note}\r\n            style={{ backgroundColor: backgroundColor }}\r\n          />\r\n        </div>\r\n        <div className=\"tags__data\">\r\n          {reminderDate !== \"\" && reminderTime !== \"\" ? (\r\n            <Chip\r\n              icon={<EventAvailableIcon />}\r\n              label={reminderDate + \" at \" + reminderTime}\r\n              onClick={handleClick}\r\n              onDelete={handleDelete}\r\n              size=\"small\"\r\n            />\r\n          ) : reminderDate !== \"\" && reminderTime === \"\" ? (\r\n            <Chip\r\n              icon={<CalendarTodayIcon />}\r\n              label={reminderDate}\r\n              onClick={handleClick}\r\n              onDelete={handleDelete}\r\n              size=\"small\"\r\n            />\r\n          ) : reminderTime !== \"\" && reminderDate === \"\" ? (\r\n            <Chip\r\n              icon={<ScheduleIcon />}\r\n              label={reminderTime}\r\n              onClick={handleClick}\r\n              onDelete={handleDelete}\r\n              size=\"small\"\r\n            />\r\n          ) : null}\r\n\r\n          {displayTags.length !== 0\r\n            ? displayTags.map((tag) => (\r\n                <Chip\r\n                  label={tag}\r\n                  onClick={handleTagClick}\r\n                  onDelete={() => handleTagDelete(tag)}\r\n                  size=\"small\"\r\n                />\r\n              ))\r\n            : null}\r\n        </div>\r\n        <Zoom in={displayOptions}>\r\n          <div className=\"button__options\">\r\n            <DisplayCardNoteOptions\r\n              setBackgroundColorValue={(value) => setBackgroundColor(value)}\r\n              addToDisplayTags={(value) => addToDisplayTags(value)}\r\n              setReminderDateValue={(value) => setReminderDate(value)}\r\n              setReminderTimeValue={(value) => setReminderTime(value)}\r\n              reminderDate={reminderDate}\r\n              reminderTime={reminderTime}\r\n              undoData={() => undoData()}\r\n              deleteNote={deleteNote}\r\n              archiveNote={archiveNote}\r\n            />\r\n          </div>\r\n        </Zoom>\r\n      </div>\r\n    </ClickAwayListener>\r\n  );\r\n}\r\n\r\nexport default DisplayCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./NoteOptions.css\";\r\nimport AddAlertIcon from \"@material-ui/icons/AddAlert\";\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  ClickAwayListener,\r\n  GridList,\r\n  Grow,\r\n  IconButton,\r\n  MenuItem,\r\n  MenuList,\r\n  Paper,\r\n  Popper,\r\n} from \"@material-ui/core\";\r\nimport LabelIcon from \"@material-ui/icons/Label\";\r\nimport PaletteSharpIcon from \"@material-ui/icons/PaletteSharp\";\r\nimport ArchiveRoundedIcon from \"@material-ui/icons/ArchiveRounded\";\r\nimport UndoRoundedIcon from \"@material-ui/icons/UndoRounded\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport { db } from \"./firebase\";\r\n\r\nconst NoteOptions = ({\r\n  setBackgroundColorValue,\r\n  addToDisplayTags,\r\n  setReminderDateValue,\r\n  setReminderTimeValue,\r\n  reminderDate,\r\n  reminderTime,\r\n  undoData,\r\n  closeCard,\r\n  archiveNote,\r\n}) => {\r\n  // const classes = useStyles();\r\n  const [reminderPopupMenu, setReminderPopupMenu] = React.useState(false);\r\n  const [labelsPopupMenu, setLabelsPopupMenu] = React.useState(false);\r\n  const [palettePopupMenu, setPalettePopupMenu] = React.useState(false);\r\n  const anchorRefReminderPopup = React.useRef(null);\r\n  const anchorRefLabelsPopup = React.useRef(null);\r\n  const anchorRefPalettePopup = React.useRef(null);\r\n\r\n  const [{ user }] = useStateValue();\r\n  const [labelsArray, setLabelsArray] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      db.collection(\"users\")\r\n        .doc(user?.uid)\r\n        .collection(\"labels\")\r\n        .onSnapshot((snapshot) =>\r\n          setLabelsArray(snapshot.docs.map((document) => document.data()))\r\n        );\r\n    }\r\n  }, []);\r\n\r\n  const handleToggleReminderPopup = () => {\r\n    setReminderPopupMenu((prevOpenReminderPopup) => !prevOpenReminderPopup);\r\n  };\r\n\r\n  const handleCloseReminderPopup = (event) => {\r\n    if (\r\n      anchorRefReminderPopup.current &&\r\n      anchorRefReminderPopup.current.contains(event.target)\r\n    ) {\r\n      return;\r\n    }\r\n    setReminderPopupMenu(false);\r\n  };\r\n\r\n  function handleListKeyDownReminderPopup(event) {\r\n    if (event.key === \"Tab\") {\r\n      event.preventDefault();\r\n      setReminderPopupMenu(false);\r\n    }\r\n  }\r\n\r\n  // return focus to the button when we transitioned from !open -> open\r\n  const prevOpenReminderPopup = React.useRef(reminderPopupMenu);\r\n  React.useEffect(() => {\r\n    if (prevOpenReminderPopup.current === true && reminderPopupMenu === false) {\r\n      anchorRefReminderPopup.current.focus();\r\n    }\r\n\r\n    prevOpenReminderPopup.current = reminderPopupMenu;\r\n  }, [reminderPopupMenu]);\r\n\r\n  const handleToggleLabelsPopup = () => {\r\n    setLabelsPopupMenu((prevOpenLabelsPopup) => !prevOpenLabelsPopup);\r\n  };\r\n\r\n  const handleCloseLabelsPopup = (event) => {\r\n    if (\r\n      anchorRefLabelsPopup.current &&\r\n      anchorRefLabelsPopup.current.contains(event.target)\r\n    ) {\r\n      return;\r\n    }\r\n    setLabelsPopupMenu(false);\r\n  };\r\n\r\n  function handleListKeyDownLabelsPopup(event) {\r\n    if (event.key === \"Tab\") {\r\n      event.preventDefault();\r\n      setLabelsPopupMenu(false);\r\n    }\r\n  }\r\n\r\n  // return focus to the button when we transitioned from !open -> open\r\n  const prevOpenLabelsPopup = React.useRef(labelsPopupMenu);\r\n  React.useEffect(() => {\r\n    if (prevOpenLabelsPopup.current === true && labelsPopupMenu === false) {\r\n      anchorRefLabelsPopup.current.focus();\r\n    }\r\n\r\n    prevOpenLabelsPopup.current = labelsPopupMenu;\r\n  }, [labelsPopupMenu]);\r\n\r\n  const handleTogglePalettePopup = () => {\r\n    setPalettePopupMenu((prevOpenPalettePopup) => !prevOpenPalettePopup);\r\n  };\r\n\r\n  const handleClosePalettePopup = (event) => {\r\n    if (\r\n      anchorRefPalettePopup.current &&\r\n      anchorRefPalettePopup.current.contains(event.target)\r\n    ) {\r\n      return;\r\n    }\r\n    setPalettePopupMenu(false);\r\n  };\r\n\r\n  function handleListKeyDownPalettePopup(event) {\r\n    if (event.key === \"Tab\") {\r\n      event.preventDefault();\r\n      setPalettePopupMenu(false);\r\n    }\r\n  }\r\n\r\n  const prevOpenPalettePopup = React.useRef(palettePopupMenu);\r\n  React.useEffect(() => {\r\n    if (prevOpenPalettePopup.current === true && palettePopupMenu === false) {\r\n      anchorRefPalettePopup.current.focus();\r\n    }\r\n\r\n    prevOpenPalettePopup.current = labelsPopupMenu;\r\n  }, [palettePopupMenu]);\r\n\r\n  return (\r\n    <div className=\"button__options\">\r\n      <div className=\"button__options__left\">\r\n        <IconButton\r\n          ref={anchorRefReminderPopup}\r\n          aria-controls={\r\n            reminderPopupMenu ? \"reminder-menu-list-grow\" : undefined\r\n          }\r\n          aria-haspopup=\"true\"\r\n          onClick={handleToggleReminderPopup}\r\n          style={{ outline: \"none\", border: \"none\" }}\r\n        >\r\n          <AddAlertIcon />\r\n        </IconButton>\r\n\r\n        <Popper\r\n          open={reminderPopupMenu}\r\n          anchorEl={anchorRefReminderPopup.current}\r\n          role={undefined}\r\n          transition\r\n          disablePortal\r\n        >\r\n          {({ TransitionProps, placement }) => (\r\n            <Grow\r\n              {...TransitionProps}\r\n              style={{\r\n                transformOrigin:\r\n                  placement === \"bottom\" ? \"center top\" : \"center bottom\",\r\n              }}\r\n            >\r\n              <Paper>\r\n                <ClickAwayListener onClickAway={handleCloseReminderPopup}>\r\n                  <MenuList\r\n                    autoFocusItem={reminderPopupMenu}\r\n                    id=\"reminder-menu-list-grow\"\r\n                    onKeyDown={handleListKeyDownReminderPopup}\r\n                  >\r\n                    <MenuItem>\r\n                      <input\r\n                        type=\"date\"\r\n                        value={reminderDate}\r\n                        onChange={(e) => setReminderDateValue(e.target.value)}\r\n                      />\r\n                    </MenuItem>\r\n                    <MenuItem>\r\n                      <input\r\n                        type=\"time\"\r\n                        onChange={(e) => setReminderTimeValue(e.target.value)}\r\n                        value={reminderTime}\r\n                      />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={handleCloseReminderPopup}>\r\n                      Close\r\n                    </MenuItem>\r\n                  </MenuList>\r\n                </ClickAwayListener>\r\n              </Paper>\r\n            </Grow>\r\n          )}\r\n        </Popper>\r\n\r\n        <IconButton\r\n          ref={anchorRefLabelsPopup}\r\n          aria-controls={labelsPopupMenu ? \"labels-menu-list-grow\" : undefined}\r\n          aria-haspopup=\"true\"\r\n          onClick={handleToggleLabelsPopup}\r\n          style={{ outline: \"none\", border: \"none\" }}\r\n        >\r\n          <LabelIcon />\r\n        </IconButton>\r\n\r\n        <Popper\r\n          open={labelsPopupMenu}\r\n          anchorEl={anchorRefLabelsPopup.current}\r\n          role={undefined}\r\n          transition\r\n          disablePortal\r\n        >\r\n          {({ TransitionProps, placement }) => (\r\n            <Grow\r\n              {...TransitionProps}\r\n              style={{\r\n                transformOrigin:\r\n                  placement === \"bottom\" ? \"center top\" : \"center bottom\",\r\n              }}\r\n            >\r\n              <Paper>\r\n                <ClickAwayListener onClickAway={handleCloseLabelsPopup}>\r\n                  <MenuList\r\n                    autoFocusItem={labelsPopupMenu}\r\n                    id=\"labels-menu-list-grow\"\r\n                    onKeyDown={handleListKeyDownLabelsPopup}\r\n                  >\r\n                    {labelsArray.map((label) => (\r\n                      <MenuItem\r\n                        button\r\n                        onClick={(event) => {\r\n                          addToDisplayTags(event.currentTarget.innerText);\r\n                          handleCloseLabelsPopup(event);\r\n                        }}\r\n                      >\r\n                        {label.label}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </MenuList>\r\n                </ClickAwayListener>\r\n              </Paper>\r\n            </Grow>\r\n          )}\r\n        </Popper>\r\n\r\n        <IconButton\r\n          ref={anchorRefPalettePopup}\r\n          aria-controls={\r\n            palettePopupMenu ? \"palette-menu-list-grow\" : undefined\r\n          }\r\n          aria-haspopup=\"true\"\r\n          onClick={handleTogglePalettePopup}\r\n          style={{ outline: \"none\", border: \"none\" }}\r\n        >\r\n          <PaletteSharpIcon />\r\n        </IconButton>\r\n\r\n        <Popper\r\n          open={palettePopupMenu}\r\n          anchorEl={anchorRefPalettePopup.current}\r\n          role={undefined}\r\n          transition\r\n          disablePortal\r\n        >\r\n          {({ TransitionProps, placement }) => (\r\n            <Grow\r\n              {...TransitionProps}\r\n              style={{\r\n                transformOrigin:\r\n                  placement === \"bottom\" ? \"center top\" : \"center bottom\",\r\n              }}\r\n            >\r\n              <Paper>\r\n                <ClickAwayListener onClickAway={handleClosePalettePopup}>\r\n                  <GridList\r\n                    autoFocusItem={palettePopupMenu}\r\n                    id=\"palette-menu-list-grow\"\r\n                    onKeyDown={handleListKeyDownPalettePopup}\r\n                    cols={10}\r\n                    cellHeight=\"auto\"\r\n                  >\r\n                    {[\r\n                      \"transparent\",\r\n                      \"lightblue\",\r\n                      \"blanchedalmond\",\r\n                      \"plum\",\r\n                      \"wheat\",\r\n                      \"lightgreen\",\r\n                      \"goldenrod\",\r\n                      \"pink\",\r\n                      \"lightskyblue\",\r\n                      \"lightsalmon\",\r\n                    ].map((color, index) => (\r\n                      <MenuItem\r\n                        key={index}\r\n                        id={index}\r\n                        button\r\n                        onClick={(event) => {\r\n                          setBackgroundColorValue(\r\n                            event.currentTarget.attributes.getNamedItem(\"value\")\r\n                              .nodeValue\r\n                          );\r\n                        }}\r\n                        value={color}\r\n                      >\r\n                        <Avatar\r\n                          style={{\r\n                            backgroundColor: color,\r\n                            color: color,\r\n                            border: \"1px solid lightgray\",\r\n                          }}\r\n                        />\r\n                      </MenuItem>\r\n                    ))}\r\n                  </GridList>\r\n                </ClickAwayListener>\r\n              </Paper>\r\n            </Grow>\r\n          )}\r\n        </Popper>\r\n\r\n        <IconButton\r\n          onClick={() => archiveNote()}\r\n          style={{ outline: \"none\", border: \"none\" }}\r\n        >\r\n          <ArchiveRoundedIcon />\r\n        </IconButton>\r\n        <IconButton\r\n          onClick={() => undoData()}\r\n          style={{ outline: \"none\", border: \"none\" }}\r\n        >\r\n          <UndoRoundedIcon />\r\n        </IconButton>\r\n      </div>\r\n      <Button\r\n        onClick={() => closeCard()}\r\n        style={{ outline: \"none\", border: \"none\" }}\r\n      >\r\n        Close\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoteOptions;\r\n","import {\r\n  Checkbox,\r\n  Chip,\r\n  ClickAwayListener,\r\n  FormControlLabel,\r\n  TextareaAutosize,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport \"./InputCard.css\";\r\nimport NoteOptions from \"./NoteOptions\";\r\nimport CalendarTodayIcon from \"@material-ui/icons/CalendarToday\";\r\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\r\nimport RoomIcon from \"@material-ui/icons/Room\";\r\nimport ScheduleIcon from \"@material-ui/icons/Schedule\";\r\nimport EventAvailableIcon from \"@material-ui/icons/EventAvailable\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport { db } from \"./firebase\";\r\n\r\nconst InputCard = ({\r\n  closeCardComponent,\r\n  setNewNoteIdInArchiveSnackBar,\r\n  displayNewNoteArchiveSnackbarMessage,\r\n}) => {\r\n  const [{ user }] = useStateValue();\r\n\r\n  const [title, setTitle] = useState(\"\");\r\n  const [note, setNote] = useState(\"\");\r\n  const [displayTags, setDisplayTags] = useState([]);\r\n  const [backgroundColor, setBackgroundColor] = useState(\"transparent\");\r\n  const [reminderDate, setReminderDate] = useState(\"\");\r\n  const [reminderTime, setReminderTime] = useState(\"\");\r\n  const [pinnedStatus, setPinedStatus] = useState(false);\r\n\r\n  const remindBy = (date, time) => {\r\n    if (date !== \"\" && time !== \"\") return \"dateAndTime\";\r\n    else if (date !== \"\" && time === \"\") return \"date\";\r\n    else if (date === \"\" && time !== \"\") return \"time\";\r\n    else return \"\";\r\n  };\r\n\r\n  const saveNote = () => {\r\n    if (\r\n      !(\r\n        title === \"\" &&\r\n        note === \"\" &&\r\n        displayTags.length === 0 &&\r\n        backgroundColor === \"transparent\" &&\r\n        reminderTime === \"\" &&\r\n        reminderDate === \"\"\r\n      )\r\n    ) {\r\n      db.collection(\"users\")\r\n        .doc(user?.uid)\r\n        .collection(\"notes\")\r\n        .add({\r\n          title: title.trim() !== \"\" ? title : \"Empty Note\",\r\n          note: note.trim() !== \"\" ? note : \"Empty Note\",\r\n          labels: displayTags,\r\n          reminderDate: reminderDate,\r\n          reminderTime: reminderTime,\r\n          remindBy: remindBy(reminderDate, reminderTime),\r\n          backgroundColor: backgroundColor,\r\n          isPinned: pinnedStatus,\r\n        })\r\n        .then((document) => document.set({ id: document.id }, { merge: true }))\r\n        .catch((error) => {\r\n          throw error;\r\n        });\r\n    }\r\n    closeCardComponent();\r\n  };\r\n\r\n  const handleClick = () => {\r\n    console.log(\"chip was clicked\");\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    if (reminderDate !== \"\" && reminderTime !== \"\") {\r\n      setReminderDate(\"\");\r\n      setReminderTime(\"\");\r\n    } else if (reminderDate !== \"\" && reminderTime === \"\") setReminderDate(\"\");\r\n    else if (reminderTime !== \"\" && reminderDate === \"\") setReminderTime(\"\");\r\n  };\r\n\r\n  const addToDisplayTags = (value) => {\r\n    const displayTagsArray = [...displayTags];\r\n    if (!displayTagsArray.includes(value)) displayTagsArray.push(value);\r\n    setDisplayTags(displayTagsArray);\r\n  };\r\n\r\n  const handleTagClick = () => {\r\n    console.log(\"tag was clicked\");\r\n  };\r\n\r\n  const handleTagDelete = (tag) => {\r\n    const displayTagsArray = [...displayTags];\r\n    const tagIndex = displayTagsArray.indexOf(tag);\r\n    displayTagsArray.splice(tagIndex, 1);\r\n    setDisplayTags(displayTagsArray);\r\n  };\r\n\r\n  const undoData = () => {\r\n    setTitle(\"\");\r\n    setNote(\"\");\r\n    setReminderTime(\"\");\r\n    setReminderDate(\"\");\r\n    setDisplayTags([]);\r\n    setBackgroundColor(\"transparent\");\r\n    setPinedStatus(false);\r\n  };\r\n\r\n  const closeCard = () => {\r\n    closeCardComponent();\r\n  };\r\n\r\n  const archiveNote = () => {\r\n    if (\r\n      !(\r\n        title === \"\" &&\r\n        note === \"\" &&\r\n        displayTags.length === 0 &&\r\n        backgroundColor === \"transparent\" &&\r\n        reminderTime === \"\" &&\r\n        reminderDate === \"\"\r\n      )\r\n    ) {\r\n      db.collection(\"users\")\r\n        .doc(user?.uid)\r\n        .collection(\"archives\")\r\n        .add({\r\n          title: title.trim() !== \"\" ? title : \"Empty Note\",\r\n          note: note.trim() !== \"\" ? note : \"Empty Note\",\r\n          labels: displayTags,\r\n          reminderDate: reminderDate,\r\n          reminderTime: reminderTime,\r\n          remindBy: remindBy(reminderDate, reminderTime),\r\n          backgroundColor: backgroundColor,\r\n          isPinned: pinnedStatus,\r\n        })\r\n        .then((document) => {\r\n          document.set({ id: document.id }, { merge: true });\r\n          setNewNoteIdInArchiveSnackBar({\r\n            id: document.id,\r\n            title: title.trim() !== \"\" ? title : \"Empty Note\",\r\n            note: note.trim() !== \"\" ? note : \"Empty Note\",\r\n            labels: displayTags,\r\n            reminderDate: reminderDate,\r\n            reminderTime: reminderTime,\r\n            remindBy: remindBy(reminderDate, reminderTime),\r\n            backgroundColor: backgroundColor,\r\n            isPinned: pinnedStatus,\r\n          });\r\n          undoData();\r\n        })\r\n        .catch((error) => {\r\n          throw error;\r\n        });\r\n      displayNewNoteArchiveSnackbarMessage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ClickAwayListener onClickAway={saveNote}>\r\n      <div\r\n        className=\"card__component\"\r\n        style={{ backgroundColor: backgroundColor }}\r\n      >\r\n        <div className=\"input__card\">\r\n          <div className=\"title__component\">\r\n            <TextareaAutosize\r\n              placeholder=\"Title\"\r\n              onChange={(e) => setTitle(e.target.value)}\r\n              className=\"title__input inputfield\"\r\n              value={title}\r\n              autoFocus\r\n              style={{ backgroundColor: backgroundColor }}\r\n            />\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  color=\"default\"\r\n                  id=\"pinned\"\r\n                  icon={<CheckBoxOutlineBlankIcon />}\r\n                  checkedIcon={<RoomIcon />}\r\n                  onChange={() => setPinedStatus(!pinnedStatus)}\r\n                  checked={pinnedStatus}\r\n                />\r\n              }\r\n            />\r\n          </div>\r\n          <TextareaAutosize\r\n            placeholder=\"Take a note...\"\r\n            onChange={(e) => setNote(e.target.value)}\r\n            className=\"note__input inputfield\"\r\n            value={note}\r\n            style={{ backgroundColor: backgroundColor }}\r\n          />\r\n          <div className=\"customizations\">\r\n            {reminderDate !== \"\" && reminderTime !== \"\" ? (\r\n              <Chip\r\n                icon={<EventAvailableIcon />}\r\n                label={reminderDate + \" at \" + reminderTime}\r\n                onClick={handleClick}\r\n                onDelete={handleDelete}\r\n              />\r\n            ) : reminderDate !== \"\" && reminderTime === \"\" ? (\r\n              <Chip\r\n                icon={<CalendarTodayIcon />}\r\n                label={reminderDate}\r\n                onClick={handleClick}\r\n                onDelete={handleDelete}\r\n              />\r\n            ) : reminderTime !== \"\" && reminderDate === \"\" ? (\r\n              <Chip\r\n                icon={<ScheduleIcon />}\r\n                label={reminderTime}\r\n                onClick={handleClick}\r\n                onDelete={handleDelete}\r\n              />\r\n            ) : null}\r\n\r\n            {displayTags.length !== 0\r\n              ? displayTags.map((tag) => (\r\n                  <Chip\r\n                    label={tag}\r\n                    onClick={handleTagClick}\r\n                    onDelete={() => handleTagDelete(tag)}\r\n                  />\r\n                ))\r\n              : null}\r\n          </div>\r\n          <NoteOptions\r\n            setBackgroundColorValue={(value) => setBackgroundColor(value)}\r\n            addToDisplayTags={(value) => addToDisplayTags(value)}\r\n            setReminderDateValue={(value) => setReminderDate(value)}\r\n            setReminderTimeValue={(value) => setReminderTime(value)}\r\n            reminderDate={reminderDate}\r\n            reminderTime={reminderTime}\r\n            undoData={() => undoData()}\r\n            closeCard={() => closeCard()}\r\n            archiveNote={() => archiveNote()}\r\n          />\r\n        </div>\r\n      </div>\r\n    </ClickAwayListener>\r\n  );\r\n};\r\n\r\nexport default InputCard;\r\n","import React from \"react\";\r\n\r\nfunction InputField({ renderInputComponent }) {\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      className=\"input__field__component\"\r\n      placeholder=\" Take a note...\"\r\n      onFocus={renderInputComponent}\r\n      style={{\r\n        display: \"block\",\r\n        margin: \"auto\",\r\n        width: \"40%\",\r\n        marginTop: \"3%\",\r\n        height: \"3rem\",\r\n        fontSize: \"1.5rem\",\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default InputField;\r\n","import { GridList } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DisplayCard from \"./DisplayCard\";\r\nimport { auth, db } from \"./firebase\";\r\nimport InputCard from \"./InputCard\";\r\nimport InputField from \"./InputField\";\r\nimport \"./Notes.css\";\r\nimport { useStateValue } from \"./StateProvider\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport EmojiObjectsIcon from \"@material-ui/icons/EmojiObjects\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  close: {\r\n    padding: theme.spacing(0.5),\r\n  },\r\n}));\r\n\r\nconst Notes = () => {\r\n  const history = useHistory();\r\n\r\n  const [snackPackArchive, setSnackPackArchive] = React.useState([]);\r\n  const [openArchiveSnackBar, setOpenArchiveSnackBar] = React.useState(false);\r\n  const [messageInfoArchive, setMessageInfoArchive] = React.useState(undefined);\r\n\r\n  const [snackPackNewNoteArchive, setSnackPackNewNoteArchive] = React.useState(\r\n    []\r\n  );\r\n  const [\r\n    openNewNoteArchiveSnackBar,\r\n    setOpenNewNoteArchiveSnackBar,\r\n  ] = React.useState(false);\r\n  const [\r\n    messageInfoNewNoteArchive,\r\n    setMessageInfoNewNoteArchive,\r\n  ] = React.useState(undefined);\r\n\r\n  const [\r\n    snackPackUndoNewNoteArchive,\r\n    setSnackPackUndoNewNoteArchive,\r\n  ] = React.useState([]);\r\n  const [\r\n    openUndoNewNoteArchiveSnackBar,\r\n    setOpenUndoNewNoteArchiveSnackBar,\r\n  ] = React.useState(false);\r\n  const [\r\n    messageInfoUndoNewNoteArchive,\r\n    setMessageInfoUndoNewNoteArchive,\r\n  ] = React.useState(undefined);\r\n\r\n  const [snackPackUndoArchive, setSnackPackUndoArchive] = React.useState([]);\r\n  const [openUndoArchiveSnackBar, setOpenUndoArchiveSnackBar] = React.useState(\r\n    false\r\n  );\r\n  const [messageInfoUndoArchive, setMessageInfoUndoArchive] = React.useState(\r\n    undefined\r\n  );\r\n\r\n  const [snackPackUndoDelete, setSnackPackUndoDelete] = React.useState([]);\r\n  const [openUndoDeleteSnackBar, setOpenUndoDeleteSnackBar] = React.useState(\r\n    false\r\n  );\r\n  const [messageInfoUndoDelete, setMessageInfoUndoDelete] = React.useState(\r\n    undefined\r\n  );\r\n\r\n  const [snackPackDelete, setSnackPackDelete] = React.useState([]);\r\n  const [openDeleteSnackBar, setOpenDeleteSnackBar] = React.useState(false);\r\n  const [messageInfoDelete, setMessageInfoDelete] = React.useState(undefined);\r\n\r\n  const [{ user }, dispatch] = useStateValue();\r\n  const [notes, setNotes] = useState([]);\r\n\r\n  const [newNoteIdInArchiveSnackBar, setNewNoteIdInArchiveSnackBar] = useState(\r\n    {}\r\n  );\r\n  const [\r\n    displayNoteIdInArchiveSnackBar,\r\n    setDisplayNoteIdInArchiveSnackBar,\r\n  ] = useState({});\r\n  const [\r\n    displayNoteIdInDeleteSnackBar,\r\n    setDisplayNoteIdInDeleteSnackBar,\r\n  ] = useState({});\r\n\r\n  React.useEffect(() => {\r\n    if (snackPackArchive.length && !messageInfoArchive) {\r\n      // Set a new snack when we don't have an active one\r\n      setMessageInfoArchive({ ...snackPackArchive[0] });\r\n      setSnackPackArchive((prev) => prev.slice(1));\r\n      setOpenArchiveSnackBar(true);\r\n    } else if (\r\n      snackPackArchive.length &&\r\n      messageInfoArchive &&\r\n      openArchiveSnackBar\r\n    ) {\r\n      // Close an active snack when a new one is added\r\n      setOpenArchiveSnackBar(false);\r\n    }\r\n  }, [snackPackArchive, messageInfoArchive, openArchiveSnackBar]);\r\n\r\n  const handleClickArchive = (message) => () => {\r\n    setSnackPackArchive((prev) => [\r\n      ...prev,\r\n      { message, key: new Date().getTime() },\r\n    ]);\r\n  };\r\n\r\n  const handleCloseArchive = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpenArchiveSnackBar(false);\r\n  };\r\n\r\n  const handleExitedArchive = () => {\r\n    setMessageInfoArchive(undefined);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (snackPackUndoArchive.length && !messageInfoUndoArchive) {\r\n      // Set a new snack when we don't have an active one\r\n      setMessageInfoUndoArchive({ ...snackPackUndoArchive[0] });\r\n      setSnackPackUndoArchive((prev) => prev.slice(1));\r\n      setOpenUndoArchiveSnackBar(true);\r\n    } else if (\r\n      snackPackUndoArchive.length &&\r\n      messageInfoUndoArchive &&\r\n      openUndoArchiveSnackBar\r\n    ) {\r\n      // Close an active snack when a new one is added\r\n      setOpenUndoArchiveSnackBar(false);\r\n    }\r\n  }, [snackPackUndoArchive, messageInfoUndoArchive, openUndoArchiveSnackBar]);\r\n\r\n  const handleClickUndoArchive = (message) => () => {\r\n    handleCloseArchive();\r\n    setSnackPackUndoArchive((prev) => [\r\n      ...prev,\r\n      { message, key: new Date().getTime() },\r\n    ]);\r\n    db.collection(\"users\")\r\n      .doc(user?.uid)\r\n      .collection(\"notes\")\r\n      .doc(displayNoteIdInArchiveSnackBar.id)\r\n      .set(displayNoteIdInArchiveSnackBar);\r\n    db.collection(\"users\")\r\n      .doc(user?.uid)\r\n      .collection(\"archives\")\r\n      .doc(displayNoteIdInArchiveSnackBar.id)\r\n      .delete();\r\n  };\r\n\r\n  const handleCloseUndoArchive = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpenUndoArchiveSnackBar(false);\r\n  };\r\n\r\n  const handleExitedUndoArchive = () => {\r\n    setMessageInfoUndoArchive(undefined);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (snackPackUndoDelete.length && !messageInfoUndoDelete) {\r\n      // Set a new snack when we don't have an active one\r\n      setMessageInfoUndoDelete({ ...snackPackUndoDelete[0] });\r\n      setSnackPackUndoDelete((prev) => prev.slice(1));\r\n      setOpenUndoDeleteSnackBar(true);\r\n    } else if (\r\n      snackPackUndoDelete.length &&\r\n      messageInfoUndoDelete &&\r\n      openUndoDeleteSnackBar\r\n    ) {\r\n      // Close an active snack when a new one is added\r\n      setOpenUndoDeleteSnackBar(false);\r\n    }\r\n  }, [snackPackUndoDelete, messageInfoUndoDelete, openUndoDeleteSnackBar]);\r\n\r\n  const handleClickUndoDelete = (message) => () => {\r\n    handleCloseDelete();\r\n    setSnackPackUndoDelete((prev) => [\r\n      ...prev,\r\n      { message, key: new Date().getTime() },\r\n    ]);\r\n    db.collection(\"users\")\r\n      .doc(user?.uid)\r\n      .collection(\"notes\")\r\n      .doc(displayNoteIdInDeleteSnackBar.id)\r\n      .set(displayNoteIdInDeleteSnackBar);\r\n    db.collection(\"users\")\r\n\r\n      .doc(user?.uid)\r\n      .collection(\"trash\")\r\n      .doc(displayNoteIdInDeleteSnackBar.id)\r\n      .delete();\r\n  };\r\n\r\n  const handleCloseUndoDelete = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpenUndoDeleteSnackBar(false);\r\n  };\r\n\r\n  const handleExitedUndoDelete = () => {\r\n    setMessageInfoUndoDelete(undefined);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (snackPackDelete.length && !messageInfoDelete) {\r\n      // Set a new snack when we don't have an active one\r\n      setMessageInfoDelete({ ...snackPackDelete[0] });\r\n      setSnackPackDelete((prev) => prev.slice(1));\r\n      setOpenDeleteSnackBar(true);\r\n    } else if (\r\n      snackPackDelete.length &&\r\n      messageInfoDelete &&\r\n      openDeleteSnackBar\r\n    ) {\r\n      // Close an active snack when a new one is added\r\n      setOpenDeleteSnackBar(false);\r\n    }\r\n  }, [snackPackDelete, messageInfoDelete, openDeleteSnackBar]);\r\n\r\n  const handleClickDelete = (message) => () => {\r\n    setSnackPackDelete((prev) => [\r\n      ...prev,\r\n      { message, key: new Date().getTime() },\r\n    ]);\r\n  };\r\n\r\n  const handleCloseDelete = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpenDeleteSnackBar(false);\r\n  };\r\n\r\n  const handleExitedDelete = () => {\r\n    setMessageInfoDelete(undefined);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (snackPackNewNoteArchive.length && !messageInfoNewNoteArchive) {\r\n      // Set a new snack when we don't have an active one\r\n      setMessageInfoNewNoteArchive({ ...snackPackNewNoteArchive[0] });\r\n      setSnackPackNewNoteArchive((prev) => prev.slice(1));\r\n      setOpenNewNoteArchiveSnackBar(true);\r\n    } else if (\r\n      snackPackNewNoteArchive.length &&\r\n      messageInfoNewNoteArchive &&\r\n      openNewNoteArchiveSnackBar\r\n    ) {\r\n      // Close an active snack when a new one is added\r\n      setOpenNewNoteArchiveSnackBar(false);\r\n    }\r\n  }, [\r\n    snackPackNewNoteArchive,\r\n    messageInfoNewNoteArchive,\r\n    openNewNoteArchiveSnackBar,\r\n  ]);\r\n\r\n  const handleClickNewNoteArchive = (message) => () => {\r\n    setSnackPackNewNoteArchive((prev) => [\r\n      ...prev,\r\n      { message, key: new Date().getTime() },\r\n    ]);\r\n  };\r\n\r\n  const handleCloseNewNoteArchive = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpenNewNoteArchiveSnackBar(false);\r\n  };\r\n\r\n  const handleExitedNewNoteArchive = () => {\r\n    setMessageInfoNewNoteArchive(undefined);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (snackPackNewNoteArchive.length && !messageInfoNewNoteArchive) {\r\n      // Set a new snack when we don't have an active one\r\n      setMessageInfoUndoNewNoteArchive({ ...snackPackUndoNewNoteArchive[0] });\r\n      setSnackPackUndoNewNoteArchive((prev) => prev.slice(1));\r\n      setOpenUndoNewNoteArchiveSnackBar(true);\r\n    } else if (\r\n      snackPackUndoNewNoteArchive.length &&\r\n      messageInfoUndoNewNoteArchive &&\r\n      openUndoNewNoteArchiveSnackBar\r\n    ) {\r\n      // Close an active snack when a new one is added\r\n      setOpenUndoNewNoteArchiveSnackBar(false);\r\n    }\r\n  }, [\r\n    snackPackUndoNewNoteArchive,\r\n    messageInfoUndoNewNoteArchive,\r\n    openUndoNewNoteArchiveSnackBar,\r\n  ]);\r\n\r\n  const handleClickUndoNewNoteArchive = (message) => () => {\r\n    handleCloseUndoNewNoteArchive();\r\n    setSnackPackUndoNewNoteArchive((prev) => [\r\n      ...prev,\r\n      { message, key: new Date().getTime() },\r\n    ]);\r\n    db.collection(\"users\")\r\n      .doc(user?.uid)\r\n      .collection(\"notes\")\r\n      .doc(newNoteIdInArchiveSnackBar.id)\r\n      .set(newNoteIdInArchiveSnackBar);\r\n    db.collection(\"users\")\r\n      .doc(user?.uid)\r\n      .collection(\"archives\")\r\n      .doc(newNoteIdInArchiveSnackBar.id)\r\n      .delete();\r\n  };\r\n\r\n  const handleCloseUndoNewNoteArchive = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpenUndoNewNoteArchiveSnackBar(false);\r\n  };\r\n\r\n  const handleExitedUndoNewNoteArchive = () => {\r\n    setMessageInfoUndoNewNoteArchive(undefined);\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  const [pinnedDocs, setPinnedDocs] = useState([]);\r\n  const [unPinnedDocs, setUnpinnedDocs] = useState([]);\r\n\r\n  if (!user) history.push(\"/login\");\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      db.collection(\"users\")\r\n        .doc(user?.uid)\r\n        .collection(\"notes\")\r\n        .onSnapshot((snapshot) =>\r\n          setNotes(snapshot.docs.map((note) => note.data()))\r\n        );\r\n\r\n      db.collection(\"users\")\r\n        .doc(user?.uid)\r\n        .collection(\"notes\")\r\n        .where(\"isPinned\", \"==\", true)\r\n        .onSnapshot((snapshot) =>\r\n          setPinnedDocs(snapshot.docs.map((doc) => doc.data()))\r\n        );\r\n\r\n      db.collection(\"users\")\r\n        .doc(user?.uid)\r\n        .collection(\"notes\")\r\n        .where(\"isPinned\", \"==\", false)\r\n        .onSnapshot((snapshot) =>\r\n          setUnpinnedDocs(snapshot.docs.map((doc) => doc.data()))\r\n        );\r\n    }\r\n  }, [user]);\r\n\r\n  const renderInputComponent = () => {\r\n    setInputArea(\r\n      <InputCard\r\n        saveNoteOnClickAway={() =>\r\n          setInputArea(\r\n            <InputField\r\n              className=\"input__Field\"\r\n              renderInputComponent={renderInputComponent}\r\n            />\r\n          )\r\n        }\r\n        displaySnackBar={handleClickArchive(\"Note Archived\")}\r\n        closeCardComponent={() =>\r\n          setInputArea(\r\n            <InputField\r\n              className=\"input__Field\"\r\n              renderInputComponent={renderInputComponent}\r\n            />\r\n          )\r\n        }\r\n        setNewNoteIdInArchiveSnackBar={(data) =>\r\n          setNewNoteIdInArchiveSnackBar(JSON.parse(JSON.stringify(data)))\r\n        }\r\n        displayNewNoteArchiveSnackbarMessage={handleClickNewNoteArchive(\r\n          \"Note Archived\"\r\n        )}\r\n      />\r\n    );\r\n  };\r\n\r\n  console.log(notes);\r\n\r\n  const [inputArea, setInputArea] = useState(\r\n    <InputField renderInputComponent={renderInputComponent} />\r\n  );\r\n\r\n  return (\r\n    <div className=\"notes\">\r\n      <div className=\"notes__input\">{inputArea}</div>\r\n      <div className=\"notes__display\">\r\n        {unPinnedDocs.length !== 0 && pinnedDocs.length !== 0 ? (\r\n          <>\r\n            <hr />\r\n            <strong>\r\n              <p>PINNED</p>\r\n            </strong>\r\n          </>\r\n        ) : null}\r\n        <GridList cols={3} cellHeight=\"auto\">\r\n          {pinnedDocs.map((note) => (\r\n            <DisplayCard\r\n              key={note.id}\r\n              id={note.id}\r\n              previoustitle={note.title}\r\n              previousnote={note.note}\r\n              previousdisplayTags={note.labels}\r\n              previousbackgroundColor={note.backgroundColor}\r\n              previousreminderDate={note.reminderDate}\r\n              previousreminderTime={note.reminderTime}\r\n              previouspinnedStatus={note.isPinned}\r\n              displayDeletedSnackBarMessage={handleClickDelete(\r\n                \"Moved to trash\"\r\n              )}\r\n              setDisplayNoteIdInDeleteSnackBar={(data) =>\r\n                setDisplayNoteIdInDeleteSnackBar(\r\n                  JSON.parse(JSON.stringify(data))\r\n                )\r\n              }\r\n              setDisplayNoteIdInArchiveSnackBar={(data) =>\r\n                setDisplayNoteIdInArchiveSnackBar(\r\n                  JSON.parse(JSON.stringify(data))\r\n                )\r\n              }\r\n              displayArchivedSnackBarMessage={handleClickArchive(\r\n                \"Note Archived\"\r\n              )}\r\n            />\r\n          ))}\r\n        </GridList>\r\n\r\n        {unPinnedDocs.length !== 0 && pinnedDocs.length !== 0 ? (\r\n          <>\r\n            <hr />\r\n            <strong>\r\n              <p>OTHERS</p>\r\n            </strong>\r\n          </>\r\n        ) : null}\r\n        <GridList cols={3} cellHeight=\"auto\">\r\n          {unPinnedDocs.map((note) => (\r\n            <DisplayCard\r\n              key={note.id}\r\n              id={note.id}\r\n              previoustitle={note.title}\r\n              previousnote={note.note}\r\n              previousdisplayTags={note.labels}\r\n              previousbackgroundColor={note.backgroundColor}\r\n              previousreminderDate={note.reminderDate}\r\n              previousreminderTime={note.reminderTime}\r\n              previouspinnedStatus={note.isPinned}\r\n              displayDeletedSnackBarMessage={handleClickDelete(\r\n                \"Moved to trash\"\r\n              )}\r\n              setDisplayNoteIdInDeleteSnackBar={(data) =>\r\n                setDisplayNoteIdInDeleteSnackBar(\r\n                  JSON.parse(JSON.stringify(data))\r\n                )\r\n              }\r\n              setDisplayNoteIdInArchiveSnackBar={(data) =>\r\n                setDisplayNoteIdInArchiveSnackBar(\r\n                  JSON.parse(JSON.stringify(data))\r\n                )\r\n              }\r\n              displayArchivedSnackBarMessage={handleClickArchive(\r\n                \"Note Archived\"\r\n              )}\r\n            />\r\n          ))}\r\n        </GridList>\r\n\r\n        {notes.length === 0 ? (\r\n          <span className=\"no__notes__placeholder\">\r\n            <EmojiObjectsIcon\r\n              style={{\r\n                fontSize: \"10rem\",\r\n                opacity: \"0.3\",\r\n                display: \"block\",\r\n                margin: \"auto\",\r\n                width: \"50%\",\r\n              }}\r\n            />\r\n            <h1>Notes you add appear here</h1>\r\n          </span>\r\n        ) : null}\r\n\r\n        <Snackbar\r\n          key={messageInfoArchive ? messageInfoArchive.key : undefined}\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"left\",\r\n          }}\r\n          open={openArchiveSnackBar}\r\n          autoHideDuration={5000}\r\n          onClose={handleCloseArchive}\r\n          onExited={handleExitedArchive}\r\n          message={messageInfoArchive ? messageInfoArchive.message : undefined}\r\n          action={\r\n            <React.Fragment>\r\n              <Button\r\n                color=\"inherit\"\r\n                size=\"small\"\r\n                onClick={handleClickUndoArchive(\"Note Unarchived\")}\r\n                style={{ border: \"none\", outline: \"none\" }}\r\n              >\r\n                UNDO\r\n              </Button>\r\n              <IconButton\r\n                style={{ border: \"none\", outline: \"none\" }}\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                className={classes.close}\r\n                onClick={handleCloseArchive}\r\n                style={{ border: \"none\", outline: \"none\" }}\r\n              >\r\n                <CloseIcon />\r\n              </IconButton>\r\n            </React.Fragment>\r\n          }\r\n        />\r\n\r\n        <Snackbar\r\n          key={messageInfoUndoArchive ? messageInfoUndoArchive.key : undefined}\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"left\",\r\n          }}\r\n          open={openUndoArchiveSnackBar}\r\n          autoHideDuration={5000}\r\n          onClose={handleCloseUndoArchive}\r\n          onExited={handleExitedUndoArchive}\r\n          message={\r\n            messageInfoUndoArchive ? messageInfoUndoArchive.message : undefined\r\n          }\r\n          action={\r\n            <React.Fragment>\r\n              <IconButton\r\n                style={{ border: \"none\", outline: \"none\" }}\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                className={classes.close}\r\n                onClick={handleCloseUndoArchive}\r\n                style={{ border: \"none\", outline: \"none\" }}\r\n              >\r\n                <CloseIcon />\r\n              </IconButton>\r\n            </React.Fragment>\r\n          }\r\n        />\r\n\r\n        <Snackbar\r\n          key={messageInfoUndoDelete ? messageInfoUndoDelete.key : undefined}\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"left\",\r\n          }}\r\n          open={openUndoDeleteSnackBar}\r\n          autoHideDuration={5000}\r\n          onClose={handleCloseUndoDelete}\r\n          onExited={handleExitedUndoDelete}\r\n          message={\r\n            messageInfoUndoDelete ? messageInfoUndoDelete.message : undefined\r\n          }\r\n          action={\r\n            <React.Fragment>\r\n              <IconButton\r\n                style={{ border: \"none\", outline: \"none\" }}\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                className={classes.close}\r\n                onClick={handleCloseUndoDelete}\r\n                style={{ border: \"none\", outline: \"none\" }}\r\n              >\r\n                <CloseIcon />\r\n              </IconButton>\r\n            </React.Fragment>\r\n          }\r\n        />\r\n\r\n        <Snackbar\r\n          key={messageInfoDelete ? messageInfoDelete.key : undefined}\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"left\",\r\n          }}\r\n          open={openDeleteSnackBar}\r\n          autoHideDuration={5000}\r\n          onClose={handleCloseDelete}\r\n          onExited={handleExitedDelete}\r\n          message={messageInfoDelete ? messageInfoDelete.message : undefined}\r\n          action={\r\n            <React.Fragment>\r\n              <Button\r\n                color=\"inherit\"\r\n                size=\"small\"\r\n                onClick={handleClickUndoDelete(\"Restored from trash\")}\r\n                style={{ border: \"none\", outline: \"none\" }}\r\n              >\r\n                UNDO\r\n              </Button>\r\n              <IconButton\r\n                style={{ border: \"none\", outline: \"none\" }}\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                className={classes.close}\r\n                onClick={handleCloseDelete}\r\n                style={{ border: \"none\", outline: \"none\" }}\r\n              >\r\n                <CloseIcon />\r\n              </IconButton>\r\n            </React.Fragment>\r\n          }\r\n        />\r\n\r\n        <Snackbar\r\n          key={\r\n            messageInfoNewNoteArchive\r\n              ? messageInfoNewNoteArchive.key\r\n              : undefined\r\n          }\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"left\",\r\n          }}\r\n          open={openNewNoteArchiveSnackBar}\r\n          autoHideDuration={5000}\r\n          onClose={handleCloseNewNoteArchive}\r\n          onExited={handleExitedNewNoteArchive}\r\n          message={\r\n            messageInfoNewNoteArchive\r\n              ? messageInfoNewNoteArchive.message\r\n              : undefined\r\n          }\r\n          action={\r\n            <React.Fragment>\r\n              <Button\r\n                color=\"inherit\"\r\n                size=\"small\"\r\n                onClick={handleClickUndoNewNoteArchive(\"Note Unarchived\")}\r\n                style={{ border: \"none\", outline: \"none\" }}\r\n              >\r\n                UNDO\r\n              </Button>\r\n              <IconButton\r\n                style={{ border: \"none\", outline: \"none\" }}\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                className={classes.close}\r\n                onClick={handleCloseNewNoteArchive}\r\n                style={{ border: \"none\", outline: \"none\" }}\r\n              >\r\n                <CloseIcon />\r\n              </IconButton>\r\n            </React.Fragment>\r\n          }\r\n        />\r\n\r\n        <Snackbar\r\n          key={\r\n            messageInfoUndoNewNoteArchive\r\n              ? messageInfoUndoNewNoteArchive.key\r\n              : undefined\r\n          }\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"left\",\r\n          }}\r\n          open={openUndoNewNoteArchiveSnackBar}\r\n          autoHideDuration={5000}\r\n          onClose={handleCloseUndoNewNoteArchive}\r\n          onExited={handleExitedUndoNewNoteArchive}\r\n          message={\r\n            messageInfoUndoNewNoteArchive\r\n              ? messageInfoUndoNewNoteArchive.message\r\n              : undefined\r\n          }\r\n          action={\r\n            <React.Fragment>\r\n              <IconButton\r\n                style={{ border: \"none\", outline: \"none\" }}\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                className={classes.close}\r\n                onClick={handleCloseUndoNewNoteArchive}\r\n                style={{ border: \"none\", outline: \"none\" }}\r\n              >\r\n                <CloseIcon />\r\n              </IconButton>\r\n            </React.Fragment>\r\n          }\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notes;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { auth, db } from \"./firebase\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport \"./Login.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {\r\n  Avatar,\r\n  Chip,\r\n  FormControl,\r\n  IconButton,\r\n  InputAdornment,\r\n  InputLabel,\r\n  LinearProgress,\r\n  OutlinedInput,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst useStylesPasswordField = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  withoutLabel: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  textField: {\r\n    width: \"96.5%\",\r\n  },\r\n}));\r\n\r\nfunction Login() {\r\n  const [{}, dispatch] = useStateValue();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const [emailError, setEmailError] = useState(false);\r\n  const [passwordError, setPasswordError] = useState(false);\r\n  const [invalidEmail, setInvalidEmail] = useState(false);\r\n\r\n  const [userDoc, setUserDoc] = useState([]);\r\n\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n\r\n  const [progress, setProgress] = useState(false);\r\n\r\n  const classesPasswordField = useStylesPasswordField();\r\n  const [values, setValues] = React.useState({\r\n    password: password,\r\n    showPassword: false,\r\n  });\r\n\r\n  const handleChange = (prop) => (event) => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n    setPassword(event.target.value);\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const usernameComponent = () => {\r\n    return (\r\n      <div className=\"usernameDetailsComponent\">\r\n        <h4>Sign in</h4>\r\n        <p className=\"username__component__title__msg\">\r\n          Use your Google Account\r\n        </p>\r\n        {!emailError && !invalidEmail ? (\r\n          <TextField\r\n            id=\"email__login\"\r\n            label=\"Your email address\"\r\n            className=\"inputfield\"\r\n            variant=\"outlined\"\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            value={email}\r\n            disabled={progress}\r\n            style={{ border: \"black\" }}\r\n          />\r\n        ) : emailError ? (\r\n          <TextField\r\n            error\r\n            id=\"email__error\"\r\n            label=\"Your email address\"\r\n            variant=\"outlined\"\r\n            className=\"inputfield\"\r\n            onFocus={() => setEmailError(false)}\r\n            onBlur={() => setEmailError(false)}\r\n            helperText={\"Email is required\"}\r\n          />\r\n        ) : (\r\n          <TextField\r\n            error\r\n            id=\"invalid__email\"\r\n            label=\"Your email address\"\r\n            variant=\"outlined\"\r\n            className=\"inputfield\"\r\n            value={email}\r\n            onFocus={() => setInvalidEmail(false)}\r\n            onBlur={() => setInvalidEmail(false)}\r\n            helperText={\"Enter a valid email\"}\r\n          />\r\n        )}\r\n        <p classname=\"email__component__info\">\r\n          <small>Not your computer? Use Guest mode to sign in privately.</small>\r\n        </p>\r\n        <div className=\"learnmore__button\">\r\n          <Button\r\n            size=\"small\"\r\n            color=\"primary\"\r\n            href=\"https://support.google.com/chrome/answer/6130773?hl=en-GB\"\r\n            disabled={progress}\r\n            style={{ border: \"none\", outline: \"none\" }}\r\n          >\r\n            Learn more\r\n          </Button>\r\n        </div>\r\n        <div className=\"username__component__options\">\r\n          <Link style={{ textDecoration: \"none\" }} to=\"/register\">\r\n            <Button\r\n              size=\"small\"\r\n              color=\"primary\"\r\n              disabled={progress}\r\n              style={{ border: \"none\", outline: \"none\" }}\r\n            >\r\n              Create Account\r\n            </Button>\r\n          </Link>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={validateUsername}\r\n            disabled={progress}\r\n            style={{ border: \"none\", outline: \"none\" }}\r\n          >\r\n            Next\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const passwordComponent = () => {\r\n    return (\r\n      <div className=\"passwordDetailsComponent\">\r\n        <h4>Welcome</h4>\r\n        <center>\r\n          <Chip\r\n            avatar={<Avatar />}\r\n            label={email}\r\n            onClick={handleBack}\r\n            variant=\"outlined\"\r\n            style={{ marginBottom: \"10%\" }}\r\n            disabled={progress}\r\n          />\r\n        </center>\r\n        {!passwordError ? (\r\n          <FormControl\r\n            className={clsx(\r\n              classesPasswordField.margin,\r\n              classesPasswordField.textField\r\n            )}\r\n            variant=\"outlined\"\r\n            disabled={progress}\r\n          >\r\n            <InputLabel htmlFor=\"outlined-adornment-password\">\r\n              Password\r\n            </InputLabel>\r\n            <OutlinedInput\r\n              id=\"outlined-adornment-password\"\r\n              type={values.showPassword ? \"text\" : \"password\"}\r\n              onChange={handleChange(\"password\")}\r\n              value={values.password}\r\n              className=\"inputfield\"\r\n              disabled={progress}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={handleClickShowPassword}\r\n                    onMouseDown={handleMouseDownPassword}\r\n                    edge=\"end\"\r\n                  >\r\n                    {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n              labelWidth={70}\r\n            />\r\n          </FormControl>\r\n        ) : (\r\n          <FormControl\r\n            className={clsx(\r\n              classesPasswordField.margin,\r\n              classesPasswordField.textField\r\n            )}\r\n            variant=\"outlined\"\r\n            // error\r\n          >\r\n            <InputLabel htmlFor=\"outlined-adornment-password-error\">\r\n              Password\r\n            </InputLabel>\r\n            <OutlinedInput\r\n              error\r\n              id=\"outlined-adornment-password-error\"\r\n              type={values.showPassword ? \"text\" : \"password\"}\r\n              onFocus={() => setPasswordError(false)}\r\n              className=\"inputfield\"\r\n              onBlur={() => setPasswordError(false)}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={handleClickShowPassword}\r\n                    onMouseDown={handleMouseDownPassword}\r\n                    edge=\"end\"\r\n                  >\r\n                    {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n              labelWidth={70}\r\n            />\r\n            <p style={{ color: \"red\", marginLeft: \"5%\", marginBottom: \"0%\" }}>\r\n              <small>Password is required</small>\r\n            </p>\r\n          </FormControl>\r\n        )}\r\n        <div className=\"submit__button\">\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={validatePassword}\r\n            disabled={progress}\r\n            style={{ border: \"none\", outline: \"none\" }}\r\n          >\r\n            Next\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const steps = getSteps();\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  function getSteps() {\r\n    return [usernameComponent, passwordComponent];\r\n  }\r\n\r\n  function getStepContent(step) {\r\n    switch (step) {\r\n      case 0:\r\n        return usernameComponent();\r\n      case 1:\r\n        return passwordComponent();\r\n      default:\r\n        return \"Unknown step\";\r\n    }\r\n  }\r\n\r\n  //useHistory() to redirect to routes\r\n  const history = useHistory();\r\n\r\n  //fires once per component mount\r\n  useEffect(() => {\r\n    //this event fires on auth state change - signIn/signOut event\r\n    auth.onAuthStateChanged((authUser) => {\r\n      console.log(\"User is \", authUser);\r\n\r\n      db.collection(\"users\").onSnapshot((snapshot) =>\r\n        setUserDoc(snapshot.docs.map((doc) => doc.data()))\r\n      );\r\n\r\n      if (authUser) {\r\n        //user has logged in/ state is maintained\r\n        //dispatching/pushing user state to data layer\r\n        dispatch({\r\n          type: \"SET_USER\",\r\n          user: authUser,\r\n        });\r\n      } else {\r\n        //user has logged out\r\n\r\n        //dispatching/pushing user state to data layer\r\n        dispatch({\r\n          type: \"SET_USER\",\r\n          user: null,\r\n        });\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const signInUser = () => {\r\n    if (email.trim() !== \"\" && password.trim() !== \"\") {\r\n      //signIn user with email and password\r\n      auth\r\n        .signInWithEmailAndPassword(email, password)\r\n        .then((authUser) => {\r\n          if (authUser) history.push(\"/\");\r\n        })\r\n        .catch((error) => {\r\n          alert(error.message);\r\n          history.push(\"/\");\r\n        });\r\n      console.log(\"user logged in\");\r\n    }\r\n  };\r\n\r\n  const validateUsername = () => {\r\n    if (email.trim() !== \"\") {\r\n      let exists = false;\r\n      userDoc.map((doc) => {\r\n        if (doc.email === email) exists = true;\r\n      });\r\n\r\n      if (exists) {\r\n        setProgress(true);\r\n        setTimeout(() => {\r\n          setProgress(false);\r\n          handleNext();\r\n        }, 2000);\r\n      } else {\r\n        setProgress(true);\r\n        setTimeout(() => {\r\n          setProgress(false);\r\n          setEmail(\"\");\r\n          setInvalidEmail(true);\r\n        }, 2000);\r\n      }\r\n    } else setEmailError(true);\r\n  };\r\n\r\n  const validatePassword = () => {\r\n    if (password.trim() !== \"\") {\r\n      setProgress(true);\r\n      handleNext();\r\n    } else {\r\n      setPasswordError(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login__block\">\r\n      {progress ? (\r\n        <LinearProgress\r\n          style={{ display: \"block\", margin: \"auto\", width: \"32%\" }}\r\n          color=\"primary\"\r\n        />\r\n      ) : null}\r\n      <div className=\"login\">\r\n        <img\r\n          className=\"login__page__logo\"\r\n          src=\"https://logo-logos.com/wp-content/uploads/2016/11/Google_logo_logotype.png\"\r\n          alt=\"loginpagelogo\"\r\n        />\r\n        {activeStep === steps.length ? (\r\n          <>\r\n            <center>\r\n              <h2>Signing in</h2>\r\n            </center>\r\n            {signInUser()}\r\n          </>\r\n        ) : (\r\n          getStepContent(activeStep)\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport { db, auth } from \"./firebase\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport \"./Register.css\";\r\nimport { Button, TextField } from \"@material-ui/core\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\n\r\nfunction Register() {\r\n  const [{}, dispatch] = useStateValue();\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [firstname, setFirstname] = useState(\"\");\r\n  const [lastname, setLastname] = useState(\"\");\r\n\r\n  const [emailInvalid, setEmailInvalid] = useState(false);\r\n  const [passwordInvalid, setPasswordInvalid] = useState(false);\r\n  const [usernameInvalid, setUsernameInvalid] = useState(false);\r\n\r\n  const [firstnameValid, setFirstnameValid] = useState(false);\r\n  const [lastnameValid, setLastnameValid] = useState(false);\r\n  const [emailValid, setEmailValid] = useState(false);\r\n  const [passwordValid, setPasswordValid] = useState(false);\r\n  const [usernameValid, setUsernameValid] = useState(false);\r\n\r\n  const [emailEmpty, setEmailEmpty] = useState(false);\r\n  const [passwordEmpty, setPasswordEmpty] = useState(false);\r\n  const [usernameEmpty, setUsernameEmpty] = useState(false);\r\n  const [firstnameEmpty, setFirstnameEmpty] = useState(false);\r\n  const [lastnameEmpty, setLastnameEmpty] = useState(false);\r\n\r\n  const [emailExists, setEmailExists] = useState(false);\r\n  const [usernameExists, setUsernameExists] = useState(false);\r\n\r\n  const [userDoc, setUserDoc] = useState([]);\r\n\r\n  const [progress, setProgress] = useState(null);\r\n\r\n  //useHistory() to redirect to routes\r\n  const history = useHistory();\r\n\r\n  //fires once per component mount\r\n  useEffect(() => {\r\n    //this event fires on auth state change - signIn/signOut event\r\n    auth.onAuthStateChanged((authUser) => {\r\n      console.log(\"User is \", authUser);\r\n      if (authUser) {\r\n        //user has logged in/ state is maintained\r\n\r\n        db.collection(\"users\").onSnapshot((snapshot) =>\r\n          setUserDoc(snapshot.docs.map((document) => document.data()))\r\n        );\r\n\r\n        //dispatching/pushing user state to data layer\r\n        dispatch({\r\n          type: \"SET_USER\",\r\n          user: authUser,\r\n        });\r\n      } else {\r\n        //user has logged out\r\n\r\n        //dispatching/pushing user state to data layer\r\n        dispatch({\r\n          type: \"SET_USER\",\r\n          user: null,\r\n        });\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  //this event fires on user registering up\r\n  const signUpUser = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (\r\n      firstnameValid &&\r\n      lastnameValid &&\r\n      emailValid &&\r\n      usernameValid &&\r\n      passwordValid\r\n    ) {\r\n      //registering user with email and password\r\n      auth\r\n        .createUserWithEmailAndPassword(email, password)\r\n        .then((authUser) => {\r\n          setProgress(<LinearProgress style={{ width: \"95%\" }} />);\r\n          if (authUser) {\r\n            authUser.user\r\n              .updateProfile({\r\n                displayName: username,\r\n              })\r\n              .then(() => {\r\n                db.collection(\"users\").doc(authUser.user.uid).set({\r\n                  uid: authUser.user.uid,\r\n                  firstname: firstname,\r\n                  lastname: lastname,\r\n                  email: email,\r\n                  username: username,\r\n                });\r\n                setTimeout(() => {\r\n                  history.push(\"/login\");\r\n                }, 3000);\r\n              });\r\n          }\r\n        })\r\n        .catch((error) => alert(error.message));\r\n    } else {\r\n      if (firstname.trim() === \"\") setFirstnameEmpty(true);\r\n      else setFirstnameValid(true);\r\n\r\n      if (lastname.trim() === \"\") setLastnameEmpty(true);\r\n      else setLastnameValid(true);\r\n\r\n      if (email.trim() === \"\") setEmailEmpty(true);\r\n      else if (!email.includes(\"@\") || !email.endsWith(\".com\"))\r\n        setEmailInvalid(true);\r\n      else {\r\n        let exists = false;\r\n        userDoc.map((doc) => {\r\n          if (doc.email === email) exists = true;\r\n        });\r\n        if (exists) setEmailExists(true);\r\n        else setEmailValid(true);\r\n      }\r\n\r\n      if (username.trim() === \"\") setUsernameEmpty(true);\r\n      else {\r\n        let exists = false;\r\n        userDoc.map((doc) => {\r\n          if (doc.username === username) exists = true;\r\n        });\r\n        if (exists) setUsernameExists(true);\r\n        else setUsernameValid(true);\r\n      }\r\n\r\n      if (password.trim() === \"\") setPasswordEmpty(true);\r\n      else if (password.length < 6 || !password.includes(/[a-zA-Z0-9]/g))\r\n        setPasswordInvalid(true);\r\n      else setPasswordValid(true);\r\n    }\r\n\r\n    console.log(\"user has registered succesfully\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"register__block\">\r\n      {progress}\r\n      <div className=\"register\">\r\n        <div className=\"register__left\">\r\n          <div className=\"register__page__title__section\">\r\n            <img\r\n              className=\"register__page__logo\"\r\n              src=\"https://logo-logos.com/wp-content/uploads/2016/11/Google_logo_logotype.png\"\r\n              alt=\"registerpagelogo\"\r\n            />\r\n            <h4>Create your Google Account</h4>\r\n          </div>\r\n          <form className=\"register__form\">\r\n            <div className=\"register__form__head\">\r\n              {!firstnameEmpty ? (\r\n                <TextField\r\n                  id=\"firstname__register\"\r\n                  label=\"First Name\"\r\n                  className=\"form__input\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  onChange={(e) => setFirstname(e.target.value)}\r\n                  defaultValue={firstname}\r\n                  style={{ margin: \"10px\" }}\r\n                  disabled={progress}\r\n                />\r\n              ) : (\r\n                <TextField\r\n                  error\r\n                  variant=\"outlined\"\r\n                  label=\"First Name\"\r\n                  className=\"form__input\"\r\n                  size=\"small\"\r\n                  style={{ margin: \"10px\" }}\r\n                  helperText=\"First Name is required\"\r\n                  onFocus={() => setFirstnameEmpty(false)}\r\n                  onBlur={() => setFirstnameEmpty(false)}\r\n                />\r\n              )}\r\n\r\n              {!lastnameEmpty ? (\r\n                <TextField\r\n                  id=\"lastname__register\"\r\n                  label=\"Last Name\"\r\n                  variant=\"outlined\"\r\n                  className=\"form__input\"\r\n                  size=\"small\"\r\n                  onChange={(e) => setLastname(e.target.value)}\r\n                  defaultValue={lastname}\r\n                  style={{ margin: \"10px\" }}\r\n                  disabled={progress}\r\n                />\r\n              ) : (\r\n                <TextField\r\n                  error\r\n                  variant=\"outlined\"\r\n                  label=\"Last Name\"\r\n                  className=\"form__input\"\r\n                  size=\"small\"\r\n                  style={{ margin: \"10px\" }}\r\n                  helperText=\"Last Name is required\"\r\n                  onFocus={() => setLastnameEmpty(false)}\r\n                  onBlur={() => setLastnameEmpty(false)}\r\n                />\r\n              )}\r\n            </div>\r\n            <div className=\"register__form__body\">\r\n              {!emailEmpty && !emailInvalid && !emailExists ? (\r\n                <TextField\r\n                  id=\"email__register\"\r\n                  className=\"form-control form__input\"\r\n                  label=\"Your email address\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  defaultValue={email}\r\n                  style={{ margin: \"10px\" }}\r\n                  helperText=\"You can use letters, numbers & periods.\"\r\n                  disabled={progress}\r\n                />\r\n              ) : emailEmpty ? (\r\n                <TextField\r\n                  error\r\n                  variant=\"outlined\"\r\n                  label=\"Your email address\"\r\n                  className=\"form__input form-control\"\r\n                  size=\"small\"\r\n                  style={{ margin: \"10px\" }}\r\n                  helperText=\"Email is required\"\r\n                  onFocus={() => setEmailEmpty(false)}\r\n                  onBlur={() => setEmailEmpty(false)}\r\n                />\r\n              ) : emailInvalid ? (\r\n                <TextField\r\n                  error\r\n                  variant=\"outlined\"\r\n                  label=\"Your email address\"\r\n                  className=\"form__input form-control\"\r\n                  size=\"small\"\r\n                  style={{ margin: \"10px\" }}\r\n                  helperText=\"Enter a valid email\"\r\n                  onFocus={() => setEmailInvalid(false)}\r\n                  onBlur={() => setEmailInvalid(false)}\r\n                />\r\n              ) : (\r\n                <TextField\r\n                  error\r\n                  variant=\"outlined\"\r\n                  label=\"Your email address\"\r\n                  className=\"form__input form-control\"\r\n                  size=\"small\"\r\n                  style={{ margin: \"10px\" }}\r\n                  helperText=\"Email already exists\"\r\n                  onFocus={() => setEmailExists(false)}\r\n                  onBlur={() => setEmailExists(false)}\r\n                />\r\n              )}\r\n            </div>\r\n            <div className=\"register__form__foot__top\">\r\n              {!usernameEmpty && !usernameInvalid && !usernameExists ? (\r\n                <TextField\r\n                  id=\"username__register\"\r\n                  label=\"Username\"\r\n                  variant=\"outlined\"\r\n                  className=\"form__input\"\r\n                  size=\"small\"\r\n                  onChange={(e) => setUsername(e.target.value)}\r\n                  defaultValue={username}\r\n                  style={{ margin: \"10px\" }}\r\n                  disabled={progress}\r\n                />\r\n              ) : usernameEmpty ? (\r\n                <TextField\r\n                  error\r\n                  variant=\"outlined\"\r\n                  label=\"Username\"\r\n                  className=\"form__input\"\r\n                  size=\"small\"\r\n                  style={{ margin: \"10px\" }}\r\n                  helperText=\"Username is required\"\r\n                  onFocus={() => setUsernameEmpty(false)}\r\n                  onBlur={() => setUsernameEmpty(false)}\r\n                />\r\n              ) : usernameInvalid ? (\r\n                <TextField\r\n                  error\r\n                  variant=\"outlined\"\r\n                  label=\"Username\"\r\n                  className=\"form__input\"\r\n                  size=\"small\"\r\n                  style={{ margin: \"10px\" }}\r\n                  helperText=\"Enter a valid username\"\r\n                  onFocus={() => setUsernameInvalid(false)}\r\n                  onBlur={() => setUsernameInvalid(false)}\r\n                />\r\n              ) : (\r\n                <TextField\r\n                  error\r\n                  variant=\"outlined\"\r\n                  label=\"Username\"\r\n                  className=\"form__input\"\r\n                  size=\"small\"\r\n                  style={{ margin: \"10px\" }}\r\n                  helperText=\"Username already exists\"\r\n                  onFocus={() => setUsernameExists(false)}\r\n                  onBlur={() => setUsernameExists(false)}\r\n                />\r\n              )}\r\n              {!passwordEmpty && !passwordInvalid ? (\r\n                <TextField\r\n                  id=\"password__register\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  variant=\"outlined\"\r\n                  className=\"form__input\"\r\n                  size=\"small\"\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  defaultValue={password}\r\n                  style={{ margin: \"10px\" }}\r\n                  disabled={progress}\r\n                />\r\n              ) : passwordEmpty ? (\r\n                <TextField\r\n                  error\r\n                  variant=\"outlined\"\r\n                  label=\"Password\"\r\n                  className=\"form__input\"\r\n                  size=\"small\"\r\n                  style={{ margin: \"10px\" }}\r\n                  helperText=\"Password is required\"\r\n                  onFocus={() => setPasswordEmpty(false)}\r\n                  onBlur={() => setPasswordEmpty(false)}\r\n                />\r\n              ) : (\r\n                <TextField\r\n                  error\r\n                  variant=\"outlined\"\r\n                  label=\"Password\"\r\n                  className=\"form__input\"\r\n                  size=\"small\"\r\n                  style={{ margin: \"10px\" }}\r\n                  helperText=\"Password is invalid\"\r\n                  onFocus={() => setPasswordInvalid(true)}\r\n                  onBlur={() => setPasswordInvalid(true)}\r\n                />\r\n              )}\r\n              <p\r\n                className=\"password__helperText\"\r\n                style={{\r\n                  marginLeft: \"22px\",\r\n                  fontSize: \"0.9rem\",\r\n                  color: \"GrayText\",\r\n                  opacity: \"0.9\",\r\n                }}\r\n              >\r\n                <small>\r\n                  For password, use 8 or more characters with a mix of letters,\r\n                  numbers & symbols.\r\n                </small>\r\n              </p>\r\n            </div>\r\n            <div className=\"register__form__foot__bottom\">\r\n              <Link to=\"/login\" style={{ textDecoration: \"none\" }}>\r\n                <Button\r\n                  color=\"primary\"\r\n                  size=\"small\"\r\n                  disabled={progress}\r\n                  style={{ border: \"none\", outline: \"none\" }}\r\n                >\r\n                  Sign In Instead\r\n                </Button>\r\n              </Link>\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={signUpUser}\r\n                size=\"small\"\r\n                disabled={progress}\r\n                style={{ border: \"none\", outline: \"none\" }}\r\n              >\r\n                Next\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <div className=\"register__right\">\r\n          <img\r\n            className=\"register__page__image\"\r\n            src=\"https://www.kindpng.com/picc/m/182-1822355_google-account-products-icons-google-account-icon-hd.png\"\r\n            alt=\"googleregisterlogo\"\r\n          />\r\n          <p\r\n            style={{\r\n              marginLeft: \"6rem\",\r\n              marginRight: \"6rem\",\r\n              marginBottom: \"0%\",\r\n            }}\r\n          >\r\n            One Account. All of Google\r\n          </p>\r\n          <p style={{ marginLeft: \"9rem\", marginRight: \"9rem\" }}>\r\n            working for you.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./NoteOptions.css\";\r\nimport AddAlertIcon from \"@material-ui/icons/AddAlert\";\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  ClickAwayListener,\r\n  GridList,\r\n  Grow,\r\n  IconButton,\r\n  MenuItem,\r\n  MenuList,\r\n  Paper,\r\n  Popper,\r\n} from \"@material-ui/core\";\r\nimport LabelIcon from \"@material-ui/icons/Label\";\r\nimport PaletteSharpIcon from \"@material-ui/icons/PaletteSharp\";\r\nimport UnarchiveIcon from \"@material-ui/icons/Unarchive\";\r\nimport UndoRoundedIcon from \"@material-ui/icons/UndoRounded\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { db } from \"./firebase\";\r\n\r\nconst DisplayCardNoteOptions = ({\r\n  setBackgroundColorValue,\r\n  addToDisplayTags,\r\n  setReminderDateValue,\r\n  setReminderTimeValue,\r\n  reminderDate,\r\n  reminderTime,\r\n  undoData,\r\n  deleteNote,\r\n  unArchiveNote,\r\n}) => {\r\n  // const classes = useStyles();\r\n  const [reminderPopupMenu, setReminderPopupMenu] = React.useState(false);\r\n  const [labelsPopupMenu, setLabelsPopupMenu] = React.useState(false);\r\n  const [palettePopupMenu, setPalettePopupMenu] = React.useState(false);\r\n  const anchorRefReminderPopup = React.useRef(null);\r\n  const anchorRefLabelsPopup = React.useRef(null);\r\n  const anchorRefPalettePopup = React.useRef(null);\r\n\r\n  const [{ user }] = useStateValue();\r\n  const [labelsArray, setLabelsArray] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      db.collection(\"users\")\r\n        .doc(user?.uid)\r\n        .collection(\"labels\")\r\n        .onSnapshot((snapshot) =>\r\n          setLabelsArray(snapshot.docs.map((document) => document.data()))\r\n        );\r\n    }\r\n  }, []);\r\n\r\n  const handleToggleReminderPopup = () => {\r\n    setReminderPopupMenu((prevOpenReminderPopup) => !prevOpenReminderPopup);\r\n  };\r\n\r\n  const handleCloseReminderPopup = (event) => {\r\n    if (\r\n      anchorRefReminderPopup.current &&\r\n      anchorRefReminderPopup.current.contains(event.target)\r\n    ) {\r\n      return;\r\n    }\r\n    setReminderPopupMenu(false);\r\n  };\r\n\r\n  function handleListKeyDownReminderPopup(event) {\r\n    if (event.key === \"Tab\") {\r\n      event.preventDefault();\r\n      setReminderPopupMenu(false);\r\n    }\r\n  }\r\n\r\n  // return focus to the button when we transitioned from !open -> open\r\n  const prevOpenReminderPopup = React.useRef(reminderPopupMenu);\r\n  React.useEffect(() => {\r\n    if (prevOpenReminderPopup.current === true && reminderPopupMenu === false) {\r\n      anchorRefReminderPopup.current.focus();\r\n    }\r\n\r\n    prevOpenReminderPopup.current = reminderPopupMenu;\r\n  }, [reminderPopupMenu]);\r\n\r\n  const handleToggleLabelsPopup = () => {\r\n    setLabelsPopupMenu((prevOpenLabelsPopup) => !prevOpenLabelsPopup);\r\n  };\r\n\r\n  const handleCloseLabelsPopup = (event) => {\r\n    if (\r\n      anchorRefLabelsPopup.current &&\r\n      anchorRefLabelsPopup.current.contains(event.target)\r\n    ) {\r\n      return;\r\n    }\r\n    setLabelsPopupMenu(false);\r\n  };\r\n\r\n  function handleListKeyDownLabelsPopup(event) {\r\n    if (event.key === \"Tab\") {\r\n      event.preventDefault();\r\n      setLabelsPopupMenu(false);\r\n    }\r\n  }\r\n\r\n  // return focus to the button when we transitioned from !open -> open\r\n  const prevOpenLabelsPopup = React.useRef(labelsPopupMenu);\r\n  React.useEffect(() => {\r\n    if (prevOpenLabelsPopup.current === true && labelsPopupMenu === false) {\r\n      anchorRefLabelsPopup.current.focus();\r\n    }\r\n\r\n    prevOpenLabelsPopup.current = labelsPopupMenu;\r\n  }, [labelsPopupMenu]);\r\n\r\n  const handleTogglePalettePopup = () => {\r\n    setPalettePopupMenu((prevOpenPalettePopup) => !prevOpenPalettePopup);\r\n  };\r\n\r\n  const handleClosePalettePopup = (event) => {\r\n    if (\r\n      anchorRefPalettePopup.current &&\r\n      anchorRefPalettePopup.current.contains(event.target)\r\n    ) {\r\n      return;\r\n    }\r\n    setPalettePopupMenu(false);\r\n  };\r\n\r\n  function handleListKeyDownPalettePopup(event) {\r\n    if (event.key === \"Tab\") {\r\n      event.preventDefault();\r\n      setPalettePopupMenu(false);\r\n    }\r\n  }\r\n\r\n  const prevOpenPalettePopup = React.useRef(palettePopupMenu);\r\n  React.useEffect(() => {\r\n    if (prevOpenPalettePopup.current === true && palettePopupMenu === false) {\r\n      anchorRefPalettePopup.current.focus();\r\n    }\r\n\r\n    prevOpenPalettePopup.current = labelsPopupMenu;\r\n  }, [palettePopupMenu]);\r\n\r\n  const deleteThisNote = () => {\r\n    deleteNote();\r\n  };\r\n\r\n  const unArchiveThisNote = () => {\r\n    unArchiveNote();\r\n  };\r\n\r\n  return (\r\n    <div className=\"button__options\">\r\n      <div className=\"button__options__left\">\r\n        <IconButton\r\n          ref={anchorRefReminderPopup}\r\n          aria-controls={\r\n            reminderPopupMenu ? \"reminder-menu-list-grow\" : undefined\r\n          }\r\n          aria-haspopup=\"true\"\r\n          onClick={handleToggleReminderPopup}\r\n          style={{ outline: \"none\", border: \"none\" }}\r\n        >\r\n          <AddAlertIcon />\r\n        </IconButton>\r\n\r\n        <Popper\r\n          open={reminderPopupMenu}\r\n          anchorEl={anchorRefReminderPopup.current}\r\n          role={undefined}\r\n          transition\r\n          disablePortal\r\n        >\r\n          {({ TransitionProps, placement }) => (\r\n            <Grow\r\n              {...TransitionProps}\r\n              style={{\r\n                transformOrigin:\r\n                  placement === \"bottom\" ? \"center top\" : \"center bottom\",\r\n              }}\r\n            >\r\n              <Paper>\r\n                <ClickAwayListener onClickAway={handleCloseReminderPopup}>\r\n                  <MenuList\r\n                    autoFocusItem={reminderPopupMenu}\r\n                    id=\"reminder-menu-list-grow\"\r\n                    onKeyDown={handleListKeyDownReminderPopup}\r\n                  >\r\n                    <MenuItem>\r\n                      <input\r\n                        type=\"date\"\r\n                        value={reminderDate}\r\n                        onChange={(e) => setReminderDateValue(e.target.value)}\r\n                      />\r\n                    </MenuItem>\r\n                    <MenuItem>\r\n                      <input\r\n                        type=\"time\"\r\n                        onChange={(e) => setReminderTimeValue(e.target.value)}\r\n                        value={reminderTime}\r\n                      />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={handleCloseReminderPopup}>\r\n                      Close\r\n                    </MenuItem>\r\n                  </MenuList>\r\n                </ClickAwayListener>\r\n              </Paper>\r\n            </Grow>\r\n          )}\r\n        </Popper>\r\n\r\n        <IconButton\r\n          ref={anchorRefLabelsPopup}\r\n          aria-controls={labelsPopupMenu ? \"labels-menu-list-grow\" : undefined}\r\n          aria-haspopup=\"true\"\r\n          onClick={handleToggleLabelsPopup}\r\n          style={{ outline: \"none\", border: \"none\" }}\r\n        >\r\n          <LabelIcon />\r\n        </IconButton>\r\n\r\n        <Popper\r\n          open={labelsPopupMenu}\r\n          anchorEl={anchorRefLabelsPopup.current}\r\n          role={undefined}\r\n          transition\r\n          disablePortal\r\n        >\r\n          {({ TransitionProps, placement }) => (\r\n            <Grow\r\n              {...TransitionProps}\r\n              style={{\r\n                transformOrigin:\r\n                  placement === \"bottom\" ? \"center top\" : \"center bottom\",\r\n              }}\r\n            >\r\n              <Paper>\r\n                <ClickAwayListener onClickAway={handleCloseLabelsPopup}>\r\n                  <MenuList\r\n                    autoFocusItem={labelsPopupMenu}\r\n                    id=\"labels-menu-list-grow\"\r\n                    onKeyDown={handleListKeyDownLabelsPopup}\r\n                  >\r\n                    {labelsArray.map((label) => (\r\n                      <MenuItem\r\n                        button\r\n                        onClick={(event) => {\r\n                          addToDisplayTags(event.currentTarget.innerText);\r\n                          handleCloseLabelsPopup(event);\r\n                        }}\r\n                      >\r\n                        {label.label}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </MenuList>\r\n                </ClickAwayListener>\r\n              </Paper>\r\n            </Grow>\r\n          )}\r\n        </Popper>\r\n\r\n        <IconButton\r\n          ref={anchorRefPalettePopup}\r\n          aria-controls={\r\n            palettePopupMenu ? \"palette-menu-list-grow\" : undefined\r\n          }\r\n          aria-haspopup=\"true\"\r\n          onClick={handleTogglePalettePopup}\r\n          style={{ outline: \"none\", border: \"none\" }}\r\n        >\r\n          <PaletteSharpIcon />\r\n        </IconButton>\r\n\r\n        <Popper\r\n          open={palettePopupMenu}\r\n          anchorEl={anchorRefPalettePopup.current}\r\n          role={undefined}\r\n          transition\r\n          disablePortal\r\n        >\r\n          {({ TransitionProps, placement }) => (\r\n            <Grow\r\n              {...TransitionProps}\r\n              style={{\r\n                transformOrigin:\r\n                  placement === \"bottom\" ? \"center top\" : \"center bottom\",\r\n              }}\r\n            >\r\n              <Paper>\r\n                <ClickAwayListener onClickAway={handleClosePalettePopup}>\r\n                  <GridList\r\n                    autoFocusItem={palettePopupMenu}\r\n                    id=\"palette-menu-list-grow\"\r\n                    onKeyDown={handleListKeyDownPalettePopup}\r\n                    cols={10}\r\n                    cellHeight=\"auto\"\r\n                  >\r\n                    {[\r\n                      \"transparent\",\r\n                      \"lightblue\",\r\n                      \"blanchedalmond\",\r\n                      \"plum\",\r\n                      \"wheat\",\r\n                      \"lightgreen\",\r\n                      \"goldenrod\",\r\n                      \"pink\",\r\n                      \"lightskyblue\",\r\n                      \"lightsalmon\",\r\n                    ].map((color, index) => (\r\n                      <MenuItem\r\n                        key={index}\r\n                        id={index}\r\n                        button\r\n                        onClick={(event) => {\r\n                          setBackgroundColorValue(\r\n                            event.currentTarget.attributes.getNamedItem(\"value\")\r\n                              .nodeValue\r\n                          );\r\n                        }}\r\n                        value={color}\r\n                      >\r\n                        <Avatar\r\n                          style={{\r\n                            backgroundColor: color,\r\n                            color: color,\r\n                            border: \"1px solid lightgray\",\r\n                          }}\r\n                        />\r\n                      </MenuItem>\r\n                    ))}\r\n                  </GridList>\r\n                </ClickAwayListener>\r\n              </Paper>\r\n            </Grow>\r\n          )}\r\n        </Popper>\r\n\r\n        <IconButton\r\n          onClick={unArchiveThisNote}\r\n          style={{ outline: \"none\", border: \"none\" }}\r\n        >\r\n          <UnarchiveIcon />\r\n        </IconButton>\r\n        <IconButton\r\n          onClick={() => undoData()}\r\n          style={{ outline: \"none\", border: \"none\" }}\r\n        >\r\n          <UndoRoundedIcon />\r\n        </IconButton>\r\n      </div>\r\n      <IconButton\r\n        onClick={deleteThisNote}\r\n        style={{ outline: \"none\", border: \"none\" }}\r\n      >\r\n        <DeleteIcon />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DisplayCardNoteOptions;\r\n","import {\r\n  Checkbox,\r\n  Chip,\r\n  ClickAwayListener,\r\n  FormControlLabel,\r\n  TextareaAutosize,\r\n  Zoom,\r\n} from \"@material-ui/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"./DisplayCard.css\";\r\nimport DisplayCardArchiveOptions from \"./DisplayCardArchiveOptions\";\r\nimport CalendarTodayIcon from \"@material-ui/icons/CalendarToday\";\r\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\r\nimport RoomIcon from \"@material-ui/icons/Room\";\r\nimport ScheduleIcon from \"@material-ui/icons/Schedule\";\r\nimport EventAvailableIcon from \"@material-ui/icons/EventAvailable\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport { db } from \"./firebase\";\r\n\r\nfunction DisplayCardArchives({\r\n  id,\r\n  previoustitle,\r\n  previousnote,\r\n  previousdisplayTags,\r\n  previousbackgroundColor,\r\n  previousreminderDate,\r\n  previousreminderTime,\r\n  previouspinnedStatus,\r\n  displayDeletedSnackBarMessage,\r\n  setDisplayNoteIdInDeleteSnackBar,\r\n  setDisplayNoteIdInUnarchiveSnackBar,\r\n  displayUnarchivedSnackBarMessage,\r\n}) {\r\n  const [{ user, view }] = useStateValue();\r\n  const [title, setTitle] = useState(\"\");\r\n  const [note, setNote] = useState(\"\");\r\n  const [displayTags, setDisplayTags] = useState([]);\r\n  const [backgroundColor, setBackgroundColor] = useState(\"transparent\");\r\n  const [reminderDate, setReminderDate] = useState(\"\");\r\n  const [reminderTime, setReminderTime] = useState(\"\");\r\n  const [pinnedStatus, setPinedStatus] = useState(false);\r\n  const [displayOptions, setDisplayOptions] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      setTitle(previoustitle);\r\n      setNote(previousnote);\r\n      setDisplayTags(previousdisplayTags);\r\n      setReminderDate(previousreminderDate || \"\");\r\n      setReminderTime(previousreminderTime || \"\");\r\n      setPinedStatus(previouspinnedStatus);\r\n      setBackgroundColor(previousbackgroundColor);\r\n    }\r\n  }, []);\r\n\r\n  const remindBy = (date, time) => {\r\n    if (date !== \"\" && time !== \"\") return \"dateAndTime\";\r\n    else if (date !== \"\" && time === \"\") return \"date\";\r\n    else if (date === \"\" && time !== \"\") return \"time\";\r\n    else return \"\";\r\n  };\r\n\r\n  const editExistingNote = () => {\r\n    if (\r\n      !(\r\n        title === \"\" &&\r\n        note === \"\" &&\r\n        displayTags.length === 0 &&\r\n        backgroundColor === \"transparent\" &&\r\n        reminderTime === \"\" &&\r\n        reminderDate === \"\"\r\n      )\r\n    ) {\r\n      db.collection(\"users\")\r\n        .doc(user?.uid)\r\n        .collection(\"archives\")\r\n        .doc(id)\r\n        .set(\r\n          {\r\n            id: id,\r\n            title: title.trim() !== \"\" ? title : \"Empty Note\",\r\n            note: note.trim() !== \"\" ? note : \"Empty Note\",\r\n            labels: displayTags,\r\n            reminderDate: reminderDate,\r\n            reminderTime: reminderTime,\r\n            remindBy: remindBy(reminderDate, reminderTime),\r\n            backgroundColor: backgroundColor,\r\n            isPinned: pinnedStatus,\r\n          },\r\n          { merge: true }\r\n        );\r\n    }\r\n  };\r\n\r\n  const handleClick = () => {\r\n    console.log(\"chip was clicked\");\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    if (reminderDate !== \"\" && reminderTime !== \"\") {\r\n      setReminderDate(\"\");\r\n      setReminderTime(\"\");\r\n    } else if (reminderDate !== \"\" && reminderTime === \"\") setReminderDate(\"\");\r\n    else if (reminderTime !== \"\" && reminderDate === \"\") setReminderTime(\"\");\r\n  };\r\n\r\n  const addToDisplayTags = (value) => {\r\n    const displayTagsArray = [...displayTags];\r\n    if (!displayTagsArray.includes(value)) displayTagsArray.push(value);\r\n    setDisplayTags(displayTagsArray);\r\n  };\r\n\r\n  const handleTagClick = () => {\r\n    console.log(\"tag was clicked\");\r\n  };\r\n\r\n  const handleTagDelete = (tag) => {\r\n    const displayTagsArray = [...displayTags];\r\n    const tagIndex = displayTagsArray.indexOf(tag);\r\n    displayTagsArray.splice(tagIndex, 1);\r\n    setDisplayTags(displayTagsArray);\r\n  };\r\n\r\n  const undoData = () => {\r\n    setTitle(previoustitle);\r\n    setNote(previousnote);\r\n    setReminderTime(previousreminderTime);\r\n    setReminderDate(previousreminderDate);\r\n    setDisplayTags(previousdisplayTags);\r\n    setBackgroundColor(previousbackgroundColor);\r\n    setPinedStatus(previouspinnedStatus);\r\n  };\r\n\r\n  const deleteNote = () => {\r\n    db.collection(\"users\")\r\n      .doc(user?.uid)\r\n      .collection(\"trash\")\r\n      .doc(id)\r\n      .set(\r\n        {\r\n          id: id,\r\n          title: title.trim() !== \"\" ? title : \"Empty Note\",\r\n          note: note.trim() !== \"\" ? note : \"Empty Note\",\r\n          labels: displayTags,\r\n          reminderDate: reminderDate,\r\n          reminderTime: reminderTime,\r\n          remindBy: remindBy(reminderDate, reminderTime),\r\n          backgroundColor: backgroundColor,\r\n          isPinned: pinnedStatus,\r\n        },\r\n        { merge: true }\r\n      );\r\n    db.collection(\"users\")\r\n      .doc(user?.uid)\r\n      .collection(\"archives\")\r\n      .doc(id)\r\n      .delete();\r\n    setDisplayNoteIdInDeleteSnackBar({\r\n      id: id,\r\n      title: title.trim() !== \"\" ? title : \"Empty Note\",\r\n      note: note.trim() !== \"\" ? note : \"Empty Note\",\r\n      labels: displayTags,\r\n      reminderDate: reminderDate,\r\n      reminderTime: reminderTime,\r\n      remindBy: remindBy(reminderDate, reminderTime),\r\n      backgroundColor: backgroundColor,\r\n      isPinned: pinnedStatus,\r\n    });\r\n    displayDeletedSnackBarMessage();\r\n  };\r\n\r\n  const unArchiveNote = () => {\r\n    db.collection(\"users\")\r\n      .doc(user?.uid)\r\n      .collection(\"notes\")\r\n      .doc(id)\r\n      .set(\r\n        {\r\n          id: id,\r\n          title: title.trim() !== \"\" ? title : \"Empty Note\",\r\n          note: note.trim() !== \"\" ? note : \"Empty Note\",\r\n          labels: displayTags,\r\n          reminderDate: reminderDate,\r\n          reminderTime: reminderTime,\r\n          remindBy: remindBy(reminderDate, reminderTime),\r\n          backgroundColor: backgroundColor,\r\n          isPinned: pinnedStatus,\r\n        },\r\n        { merge: true }\r\n      );\r\n    db.collection(\"users\")\r\n      .doc(user?.uid)\r\n      .collection(\"archives\")\r\n      .doc(id)\r\n      .delete();\r\n    setDisplayNoteIdInUnarchiveSnackBar({\r\n      id: id,\r\n      title: title.trim() !== \"\" ? title : \"Empty Note\",\r\n      note: note.trim() !== \"\" ? note : \"Empty Note\",\r\n      labels: displayTags,\r\n      reminderDate: reminderDate,\r\n      reminderTime: reminderTime,\r\n      remindBy: remindBy(reminderDate, reminderTime),\r\n      backgroundColor: backgroundColor,\r\n      isPinned: pinnedStatus,\r\n    });\r\n    displayUnarchivedSnackBarMessage();\r\n  };\r\n\r\n  return (\r\n    <ClickAwayListener onClickAway={editExistingNote}>\r\n      <div\r\n        className=\"display__card\"\r\n        onMouseEnter={() => setDisplayOptions(true)}\r\n        onMouseLeave={() => setDisplayOptions(false)}\r\n        style={{\r\n          backgroundColor: backgroundColor,\r\n          width: view === \"list\" ? \"100%\" : \"300px\",\r\n        }}\r\n      >\r\n        <div className=\"text__data\">\r\n          <div className=\"display__card__title__component\">\r\n            <TextareaAutosize\r\n              placeholder=\"Title\"\r\n              onChange={(e) => setTitle(e.target.value)}\r\n              className=\"display__card__title__input\"\r\n              value={title}\r\n              autoFocus\r\n              style={{ backgroundColor: backgroundColor }}\r\n            />\r\n            <Zoom in={displayOptions}>\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    color=\"default\"\r\n                    id=\"display__pinned\"\r\n                    icon={<CheckBoxOutlineBlankIcon />}\r\n                    checkedIcon={<RoomIcon />}\r\n                    onChange={() => setPinedStatus(!pinnedStatus)}\r\n                    checked={pinnedStatus}\r\n                  />\r\n                }\r\n              />\r\n            </Zoom>\r\n          </div>\r\n          <TextareaAutosize\r\n            placeholder=\"Take a note...\"\r\n            onChange={(e) => setNote(e.target.value)}\r\n            className=\"display__note__input\"\r\n            value={note}\r\n            style={{ backgroundColor: backgroundColor }}\r\n          />\r\n        </div>\r\n        <div className=\"tags__data\">\r\n          {reminderDate !== \"\" && reminderTime !== \"\" ? (\r\n            <Chip\r\n              icon={<EventAvailableIcon />}\r\n              label={reminderDate + \" at \" + reminderTime}\r\n              onClick={handleClick}\r\n              onDelete={handleDelete}\r\n              size=\"small\"\r\n            />\r\n          ) : reminderDate !== \"\" && reminderTime === \"\" ? (\r\n            <Chip\r\n              icon={<CalendarTodayIcon />}\r\n              label={reminderDate}\r\n              onClick={handleClick}\r\n              onDelete={handleDelete}\r\n              size=\"small\"\r\n            />\r\n          ) : reminderTime !== \"\" && reminderDate === \"\" ? (\r\n            <Chip\r\n              icon={<ScheduleIcon />}\r\n              label={reminderTime}\r\n              onClick={handleClick}\r\n              onDelete={handleDelete}\r\n              size=\"small\"\r\n            />\r\n          ) : null}\r\n\r\n          {displayTags.length !== 0\r\n            ? displayTags.map((tag) => (\r\n                <Chip\r\n                  label={tag}\r\n                  onClick={handleTagClick}\r\n                  onDelete={() => handleTagDelete(tag)}\r\n                  size=\"small\"\r\n                />\r\n              ))\r\n            : null}\r\n        </div>\r\n        <Zoom in={displayOptions}>\r\n          <div className=\"button__options\">\r\n            <DisplayCardArchiveOptions\r\n              setBackgroundColorValue={(value) => setBackgroundColor(value)}\r\n              addToDisplayTags={(value) => addToDisplayTags(value)}\r\n              setReminderDateValue={(value) => setReminderDate(value)}\r\n              setReminderTimeValue={(value) => setReminderTime(value)}\r\n              reminderDate={reminderDate}\r\n              reminderTime={reminderTime}\r\n              undoData={() => undoData()}\r\n              deleteNote={deleteNote}\r\n              unArchiveNote={unArchiveNote}\r\n            />\r\n          </div>\r\n        </Zoom>\r\n      </div>\r\n    </ClickAwayListener>\r\n  );\r\n}\r\n\r\nexport default DisplayCardArchives;\r\n","import { GridList } from \"@material-ui/core\";\r\nimport React, { Component, useEffect, useState } from \"react\";\r\nimport { db } from \"./firebase\";\r\nimport \"./Notes.css\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport DisplayCardArchives from \"./DisplayCardArchives\";\r\n\r\nconst ArchiveData = ({\r\n  archivedData,\r\n  pinnedData,\r\n  unpinnedData,\r\n  setDisplayNoteIdInDeleteSnackBar,\r\n  setDisplayNoteIdInUnarchiveSnackBar,\r\n  displayDeletedSnackBarMessage,\r\n  displayUnarchivedSnackBarMessage,\r\n}) => {\r\n  const [{ user }, dispatch] = useStateValue();\r\n  const [notes, setNotes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      db.collection(\"users\")\r\n        .doc(user?.uid)\r\n        .collection(\"notes\")\r\n        .onSnapshot((snapshot) =>\r\n          setNotes(snapshot.docs.map((note) => note.data()))\r\n        );\r\n    }\r\n  }, [user]);\r\n\r\n  return (\r\n    <div className=\"notes\">\r\n      <div className=\"notes__display\">\r\n        {unpinnedData.length !== 0 && pinnedData.length !== 0 ? (\r\n          <>\r\n            <hr />\r\n            <strong>\r\n              <p>PINNED</p>\r\n            </strong>\r\n          </>\r\n        ) : null}\r\n        <GridList cols={3} cellHeight=\"auto\">\r\n          {pinnedData.map((note) => (\r\n            <DisplayCardArchives\r\n              key={note.id}\r\n              id={note.id}\r\n              previoustitle={note.title}\r\n              previousnote={note.note}\r\n              previousdisplayTags={note.labels}\r\n              previousbackgroundColor={note.backgroundColor}\r\n              previousreminderDate={note.reminderDate}\r\n              previousreminderTime={note.reminderTime}\r\n              previouspinnedStatus={note.isPinned}\r\n              setDisplayNoteIdInDeleteSnackBar={(data) =>\r\n                setDisplayNoteIdInDeleteSnackBar(\r\n                  JSON.parse(JSON.stringify(data))\r\n                )\r\n              }\r\n              setDisplayNoteIdInUnarchiveSnackBar={(data) =>\r\n                setDisplayNoteIdInUnarchiveSnackBar(\r\n                  JSON.parse(JSON.stringify(data))\r\n                )\r\n              }\r\n              displayDeletedSnackBarMessage={() =>\r\n                displayDeletedSnackBarMessage()\r\n              }\r\n              displayUnarchivedSnackBarMessage={() =>\r\n                displayUnarchivedSnackBarMessage()\r\n              }\r\n            />\r\n          ))}\r\n        </GridList>\r\n\r\n        {unpinnedData.length !== 0 && pinnedData.length !== 0 ? (\r\n          <>\r\n            <hr />\r\n            <strong>\r\n              <p>OTHERS</p>\r\n            </strong>\r\n          </>\r\n        ) : null}\r\n        <GridList cols={1} cellHeight=\"auto\">\r\n          {unpinnedData.map((note) => (\r\n            <DisplayCardArchives\r\n              key={note.id}\r\n              id={note.id}\r\n              previoustitle={note.title}\r\n              previousnote={note.note}\r\n              previousdisplayTags={note.labels}\r\n              previousbackgroundColor={note.backgroundColor}\r\n              previousreminderDate={note.reminderDate}\r\n              previousreminderTime={note.reminderTime}\r\n              previouspinnedStatus={note.isPinned}\r\n              setDisplayNoteIdInDeleteSnackBar={(data) =>\r\n                setDisplayNoteIdInDeleteSnackBar(\r\n                  JSON.parse(JSON.stringify(data))\r\n                )\r\n              }\r\n              setDisplayNoteIdInUnarchiveSnackBar={(data) =>\r\n                setDisplayNoteIdInUnarchiveSnackBar(\r\n                  JSON.parse(JSON.stringify(data))\r\n                )\r\n              }\r\n              displayDeletedSnackBarMessage={() =>\r\n                displayDeletedSnackBarMessage()\r\n              }\r\n              displayUnarchivedSnackBarMessage={() =>\r\n                displayUnarchivedSnackBarMessage()\r\n              }\r\n            />\r\n          ))}\r\n        </GridList>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ArchiveData;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./Archives.css\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport ArchiveIcon from \"@material-ui/icons/Archive\";\r\nimport { db } from \"./firebase\";\r\nimport ArchiveData from \"./ArchiveData\";\r\nimport { IconButton, makeStyles, Snackbar } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { useHistory } from \"react-router-dom\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  close: {\r\n    padding: theme.spacing(0.5),\r\n  },\r\n}));\r\n\r\nfunction Archives() {\r\n  const [{ user }] = useStateValue();\r\n  const [archives, setArchives] = useState([]);\r\n  const [pinnedData, setPinnedData] = useState([]);\r\n  const [unpinnedData, setUnpinnedData] = useState([]);\r\n\r\n  const history = useHistory();\r\n  if (!user) history.push(\"/login\");\r\n\r\n  const [\r\n    displayNoteIdInDeleteSnackBar,\r\n    setDisplayNoteIdInDeleteSnackBar,\r\n  ] = useState(\"\");\r\n  const [\r\n    displayNoteIdInUnarchiveSnackBar,\r\n    setDisplayNoteIdInUnarchiveSnackBar,\r\n  ] = useState(\"\");\r\n\r\n  const [snackPackUndoArchive, setSnackPackUndoArchive] = React.useState([]);\r\n  const [openUndoArchiveSnackBar, setOpenUndoArchiveSnackBar] = React.useState(\r\n    false\r\n  );\r\n  const [messageInfoUndoArchive, setMessageInfoUndoArchive] = React.useState(\r\n    undefined\r\n  );\r\n\r\n  const [snackPackUndoDelete, setSnackPackUndoDelete] = React.useState([]);\r\n  const [openUndoDeleteSnackBar, setOpenUndoDeleteSnackBar] = React.useState(\r\n    false\r\n  );\r\n  const [messageInfoUndoDelete, setMessageInfoUndoDelete] = React.useState(\r\n    undefined\r\n  );\r\n\r\n  const [snackPackDelete, setSnackPackDelete] = React.useState([]);\r\n  const [openDeleteSnackBar, setOpenDeleteSnackBar] = React.useState(false);\r\n  const [messageInfoDelete, setMessageInfoDelete] = React.useState(undefined);\r\n\r\n  React.useEffect(() => {\r\n    if (snackPackUndoArchive.length && !messageInfoUndoArchive) {\r\n      // Set a new snack when we don't have an active one\r\n      setMessageInfoUndoArchive({ ...snackPackUndoArchive[0] });\r\n      setSnackPackUndoArchive((prev) => prev.slice(1));\r\n      setOpenUndoArchiveSnackBar(true);\r\n    } else if (\r\n      snackPackUndoArchive.length &&\r\n      messageInfoUndoArchive &&\r\n      openUndoArchiveSnackBar\r\n    ) {\r\n      // Close an active snack when a new one is added\r\n      setOpenUndoArchiveSnackBar(false);\r\n    }\r\n  }, [snackPackUndoArchive, messageInfoUndoArchive, openUndoArchiveSnackBar]);\r\n\r\n  const handleClickUndoArchive = (message) => () => {\r\n    setSnackPackUndoArchive((prev) => [\r\n      ...prev,\r\n      { message, key: new Date().getTime() },\r\n    ]);\r\n  };\r\n\r\n  const handleCloseUndoArchive = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpenUndoArchiveSnackBar(false);\r\n  };\r\n\r\n  const handleExitedUndoArchive = () => {\r\n    setMessageInfoUndoArchive(undefined);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (snackPackUndoDelete.length && !messageInfoUndoDelete) {\r\n      // Set a new snack when we don't have an active one\r\n      setMessageInfoUndoDelete({ ...snackPackUndoDelete[0] });\r\n      setSnackPackUndoDelete((prev) => prev.slice(1));\r\n      setOpenUndoDeleteSnackBar(true);\r\n    } else if (\r\n      snackPackUndoDelete.length &&\r\n      messageInfoUndoDelete &&\r\n      openUndoDeleteSnackBar\r\n    ) {\r\n      // Close an active snack when a new one is added\r\n      setOpenUndoDeleteSnackBar(false);\r\n    }\r\n  }, [snackPackUndoDelete, messageInfoUndoDelete, openUndoDeleteSnackBar]);\r\n\r\n  const handleClickUndoDelete = (message) => () => {\r\n    handleCloseDelete();\r\n    setSnackPackUndoDelete((prev) => [\r\n      ...prev,\r\n      { message, key: new Date().getTime() },\r\n    ]);\r\n    db.collection(\"users\")\r\n      .doc(user?.uid)\r\n      .collection(\"archives\")\r\n      .doc(displayNoteIdInDeleteSnackBar.id)\r\n      .set(displayNoteIdInDeleteSnackBar);\r\n    db.collection(\"users\")\r\n      .doc(user?.uid)\r\n      .collection(\"trash\")\r\n      .doc(displayNoteIdInDeleteSnackBar.id)\r\n      .delete();\r\n  };\r\n\r\n  const handleCloseUndoDelete = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpenUndoDeleteSnackBar(false);\r\n  };\r\n\r\n  const handleExitedUndoDelete = () => {\r\n    setMessageInfoUndoDelete(undefined);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (snackPackDelete.length && !messageInfoDelete) {\r\n      // Set a new snack when we don't have an active one\r\n      setMessageInfoDelete({ ...snackPackDelete[0] });\r\n      setSnackPackDelete((prev) => prev.slice(1));\r\n      setOpenDeleteSnackBar(true);\r\n    } else if (\r\n      snackPackDelete.length &&\r\n      messageInfoDelete &&\r\n      openDeleteSnackBar\r\n    ) {\r\n      // Close an active snack when a new one is added\r\n      setOpenDeleteSnackBar(false);\r\n    }\r\n  }, [snackPackDelete, messageInfoDelete, openDeleteSnackBar]);\r\n\r\n  const handleClickDelete = (message) => () => {\r\n    setSnackPackDelete((prev) => [\r\n      ...prev,\r\n      { message, key: new Date().getTime() },\r\n    ]);\r\n  };\r\n\r\n  const handleCloseDelete = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpenDeleteSnackBar(false);\r\n  };\r\n\r\n  const handleExitedDelete = () => {\r\n    setMessageInfoDelete(undefined);\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      db.collection(\"users\")\r\n        .doc(user?.uid)\r\n        .collection(\"archives\")\r\n        .onSnapshot((snapshot) =>\r\n          setArchives(snapshot.docs.map((note) => note.data()))\r\n        );\r\n\r\n      db.collection(\"users\")\r\n        .doc(user?.uid)\r\n        .collection(\"archives\")\r\n        .where(\"isPinned\", \"==\", true)\r\n        .onSnapshot((snapshot) =>\r\n          setPinnedData(snapshot.docs.map((note) => note.data()))\r\n        );\r\n\r\n      db.collection(\"users\")\r\n        .doc(user?.uid)\r\n        .collection(\"archives\")\r\n        .where(\"isPinned\", \"==\", false)\r\n        .onSnapshot((snapshot) =>\r\n          setUnpinnedData(snapshot.docs.map((note) => note.data()))\r\n        );\r\n    }\r\n  }, [user]);\r\n\r\n  return (\r\n    <div className=\"archived__notes\">\r\n      {archives.length !== 0 ? (\r\n        <div className=\"display__archived__notes\">\r\n          <ArchiveData\r\n            archivedData={archives}\r\n            pinnedData={pinnedData}\r\n            unpinnedData={unpinnedData}\r\n            displayUnarchivedSnackBarMessage={handleClickUndoArchive(\r\n              \"Note Unarchived\"\r\n            )}\r\n            setDisplayNoteIdInDeleteSnackBar={(data) =>\r\n              setDisplayNoteIdInDeleteSnackBar(JSON.parse(JSON.stringify(data)))\r\n            }\r\n            setDisplayNoteIdInUnarchiveSnackBar={(data) =>\r\n              setDisplayNoteIdInUnarchiveSnackBar(\r\n                JSON.parse(JSON.stringify(data))\r\n              )\r\n            }\r\n            displayDeletedSnackBarMessage={handleClickDelete(\"Moved to trash\")}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <span className=\"no__archives__placeholder\">\r\n          <ArchiveIcon\r\n            style={{\r\n              fontSize: \"10rem\",\r\n              opacity: \"0.3\",\r\n              display: \"block\",\r\n              margin: \"auto\",\r\n              width: \"50%\",\r\n            }}\r\n          />\r\n          <h1>Your archived notes appear here</h1>\r\n        </span>\r\n      )}\r\n\r\n      <Snackbar\r\n        key={messageInfoUndoArchive ? messageInfoUndoArchive.key : undefined}\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"left\",\r\n        }}\r\n        open={openUndoArchiveSnackBar}\r\n        autoHideDuration={5000}\r\n        onClose={handleCloseUndoArchive}\r\n        onExited={handleExitedUndoArchive}\r\n        message={\r\n          messageInfoUndoArchive ? messageInfoUndoArchive.message : undefined\r\n        }\r\n        action={\r\n          <React.Fragment>\r\n            <IconButton\r\n              aria-label=\"close\"\r\n              color=\"inherit\"\r\n              className={classes.close}\r\n              onClick={handleCloseUndoArchive}\r\n              style={{ border: \"none\", outline: \"none\" }}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </React.Fragment>\r\n        }\r\n      />\r\n\r\n      <Snackbar\r\n        key={messageInfoUndoDelete ? messageInfoUndoDelete.key : undefined}\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"left\",\r\n        }}\r\n        open={openUndoDeleteSnackBar}\r\n        autoHideDuration={5000}\r\n        onClose={handleCloseUndoDelete}\r\n        onExited={handleExitedUndoDelete}\r\n        message={\r\n          messageInfoUndoDelete ? messageInfoUndoDelete.message : undefined\r\n        }\r\n        action={\r\n          <React.Fragment>\r\n            <IconButton\r\n              aria-label=\"close\"\r\n              color=\"inherit\"\r\n              className={classes.close}\r\n              onClick={handleCloseUndoDelete}\r\n              style={{ border: \"none\", outline: \"none\" }}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </React.Fragment>\r\n        }\r\n      />\r\n\r\n      <Snackbar\r\n        key={messageInfoDelete ? messageInfoDelete.key : undefined}\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"left\",\r\n        }}\r\n        open={openDeleteSnackBar}\r\n        autoHideDuration={5000}\r\n        onClose={handleCloseDelete}\r\n        onExited={handleExitedDelete}\r\n        message={messageInfoDelete ? messageInfoDelete.message : undefined}\r\n        action={\r\n          <React.Fragment>\r\n            <Button\r\n              color=\"inherit\"\r\n              size=\"small\"\r\n              onClick={handleClickUndoDelete(\"Restored from trash\")}\r\n              style={{ border: \"none\", outline: \"none\" }}\r\n            >\r\n              UNDO\r\n            </Button>\r\n            <IconButton\r\n              aria-label=\"close\"\r\n              color=\"inherit\"\r\n              className={classes.close}\r\n              onClick={handleCloseDelete}\r\n              style={{ border: \"none\", outline: \"none\" }}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </React.Fragment>\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Archives;\r\n","import {\r\n  Checkbox,\r\n  Chip,\r\n  FormControlLabel,\r\n  IconButton,\r\n  TextareaAutosize,\r\n} from \"@material-ui/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"./DisplayCard.css\";\r\nimport CalendarTodayIcon from \"@material-ui/icons/CalendarToday\";\r\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\r\nimport RoomIcon from \"@material-ui/icons/Room\";\r\nimport ScheduleIcon from \"@material-ui/icons/Schedule\";\r\nimport EventAvailableIcon from \"@material-ui/icons/EventAvailable\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport RestoreFromTrashIcon from \"@material-ui/icons/RestoreFromTrash\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport { db } from \"./firebase\";\r\n\r\nfunction DisplayCardTrash({\r\n  id,\r\n  previoustitle,\r\n  previousnote,\r\n  previousdisplayTags,\r\n  previousbackgroundColor,\r\n  previousreminderDate,\r\n  previousreminderTime,\r\n  previouspinnedStatus,\r\n  deleteForeverNote,\r\n  displayRestoreSnackBarMessage,\r\n}) {\r\n  const [{ user, view }] = useStateValue();\r\n  const [title, setTitle] = useState(\"\");\r\n  const [note, setNote] = useState(\"\");\r\n  const [displayTags, setDisplayTags] = useState([]);\r\n  const [backgroundColor, setBackgroundColor] = useState(\"transparent\");\r\n  const [reminderDate, setReminderDate] = useState(\"\");\r\n  const [reminderTime, setReminderTime] = useState(\"\");\r\n  const [pinnedStatus, setPinedStatus] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      setTitle(previoustitle);\r\n      setNote(previousnote);\r\n      setDisplayTags(previousdisplayTags);\r\n      setReminderDate(previousreminderDate);\r\n      setReminderTime(previousreminderTime);\r\n      setPinedStatus(previouspinnedStatus);\r\n      setBackgroundColor(previousbackgroundColor);\r\n    }\r\n  }, []);\r\n\r\n  const remindBy = (date, time) => {\r\n    if (date !== \"\" && time !== \"\") return \"dateAndTime\";\r\n    else if (date !== \"\" && time === \"\") return \"date\";\r\n    else if (date === \"\" && time !== \"\") return \"time\";\r\n    else return \"\";\r\n  };\r\n\r\n  const restoreThisNote = () => {\r\n    db.collection(\"users\")\r\n      .doc(user?.uid)\r\n      .collection(\"notes\")\r\n      .doc(id)\r\n      .set({\r\n        id: id,\r\n        title: title,\r\n        note: note,\r\n        labels: displayTags,\r\n        reminderDate: reminderDate,\r\n        reminderTime: reminderTime,\r\n        remindBy: remindBy(reminderDate, reminderTime),\r\n        backgroundColor: backgroundColor,\r\n        isPinned: pinnedStatus,\r\n      });\r\n\r\n    db.collection(\"users\").doc(user?.uid).collection(\"trash\").doc(id).delete();\r\n    displayRestoreSnackBarMessage();\r\n  };\r\n\r\n  const deleteForeverThisNote = () => {\r\n    deleteForeverNote(id);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"display__card\"\r\n      style={{\r\n        backgroundColor: backgroundColor,\r\n        width: view === \"list\" ? \"100%\" : \"300px\",\r\n      }}\r\n    >\r\n      <div className=\"text__data\">\r\n        <div className=\"display__card__title__component\">\r\n          <TextareaAutosize\r\n            placeholder=\"Title\"\r\n            onChange={(e) => setTitle(e.target.value)}\r\n            className=\"display__card__title__input\"\r\n            value={title}\r\n            autoFocus\r\n            style={{ backgroundColor: backgroundColor }}\r\n            readOnly\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                color=\"default\"\r\n                id=\"display__pinned\"\r\n                icon={<CheckBoxOutlineBlankIcon />}\r\n                checkedIcon={<RoomIcon />}\r\n                onChange={() => setPinedStatus(!pinnedStatus)}\r\n                checked={pinnedStatus}\r\n                disabled\r\n              />\r\n            }\r\n          />\r\n        </div>\r\n        <TextareaAutosize\r\n          placeholder=\"Take a note...\"\r\n          onChange={(e) => setNote(e.target.value)}\r\n          className=\"display__note__input\"\r\n          value={note}\r\n          style={{ backgroundColor: backgroundColor }}\r\n          readOnly\r\n        />\r\n      </div>\r\n      <div className=\"tags__data\">\r\n        {reminderDate !== \"\" && reminderTime !== \"\" ? (\r\n          <Chip\r\n            icon={<EventAvailableIcon />}\r\n            label={reminderDate + \" at \" + reminderTime}\r\n            size=\"small\"\r\n            disabled\r\n          />\r\n        ) : reminderDate !== \"\" && reminderTime === \"\" ? (\r\n          <Chip\r\n            icon={<CalendarTodayIcon />}\r\n            label={reminderDate}\r\n            size=\"small\"\r\n            disabled\r\n          />\r\n        ) : reminderTime !== \"\" && reminderDate === \"\" ? (\r\n          <Chip\r\n            icon={<ScheduleIcon />}\r\n            label={reminderTime}\r\n            size=\"small\"\r\n            disabled\r\n          />\r\n        ) : null}\r\n\r\n        {displayTags.length !== 0\r\n          ? displayTags.map((tag) => <Chip label={tag} size=\"small\" disabled />)\r\n          : null}\r\n      </div>\r\n      <div className=\"button__options\">\r\n        <IconButton\r\n          onClick={restoreThisNote}\r\n          style={{ outline: \"none\", border: \"none\" }}\r\n        >\r\n          <RestoreFromTrashIcon />\r\n        </IconButton>\r\n        <IconButton\r\n          onClick={deleteForeverThisNote}\r\n          style={{ outline: \"none\", border: \"none\" }}\r\n        >\r\n          <DeleteForeverIcon />\r\n        </IconButton>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DisplayCardTrash;\r\n","import {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  GridList,\r\n} from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { db } from \"./firebase\";\r\nimport \"./Notes.css\";\r\nimport { useStateValue } from \"./StateProvider\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DisplayCardTrash from \"./DisplayCardTrash\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  close: {\r\n    padding: theme.spacing(0.5),\r\n  },\r\n}));\r\n\r\nconst TrashData = ({ trashData, displayRestoreSnackBarMessage }) => {\r\n  const [deleteForeverDialog, setDeleteForeverDialog] = useState(false);\r\n  const [deleteForeverNoteId, setDeleteForeverNoteId] = useState(\"\");\r\n\r\n  const [{ user }] = useStateValue();\r\n  const [notes, setNotes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      db.collection(\"users\")\r\n        .doc(user?.uid)\r\n        .collection(\"notes\")\r\n        .onSnapshot((snapshot) =>\r\n          setNotes(snapshot.docs.map((note) => note.data()))\r\n        );\r\n    }\r\n  }, [user]);\r\n\r\n  console.log(notes);\r\n\r\n  const deleteForeverNote = (id) => {\r\n    setDeleteForeverNoteId(id);\r\n    setDeleteForeverDialog(true);\r\n  };\r\n\r\n  const deleteForever = () => {\r\n    db.collection(\"users\")\r\n      .doc(user?.uid)\r\n      .collection(\"trash\")\r\n      .doc(deleteForeverNoteId)\r\n      .delete();\r\n    setDeleteForeverDialog(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"notes\">\r\n      <div className=\"notes__display\">\r\n        <GridList cols={1} cellHeight=\"auto\">\r\n          {trashData.map((note) => (\r\n            <DisplayCardTrash\r\n              key={note.id}\r\n              id={note.id}\r\n              previoustitle={note.title}\r\n              previousnote={note.note}\r\n              previousdisplayTags={note.labels}\r\n              previousbackgroundColor={note.backgroundColor}\r\n              previousreminderDate={note.reminderDate}\r\n              previousreminderTime={note.reminderTime}\r\n              previouspinnedStatus={note.isPinned}\r\n              deleteForeverNote={(id) => deleteForeverNote(id)}\r\n              displayRestoreSnackBarMessage={() =>\r\n                displayRestoreSnackBarMessage()\r\n              }\r\n            />\r\n          ))}\r\n        </GridList>\r\n        <Dialog\r\n          open={deleteForeverDialog}\r\n          onClose={() => setDeleteForeverDialog(false)}\r\n        >\r\n          <DialogTitle>Delete Note</DialogTitle>\r\n          <DialogContent>\r\n            Deleting note from trash would remove it permanently. Would you like\r\n            to continue?\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              onClick={deleteForever}\r\n              style={{ border: \"none\", outline: \"none\" }}\r\n            >\r\n              Delete\r\n            </Button>\r\n            <Button\r\n              onClick={() => setDeleteForeverDialog(false)}\r\n              style={{ border: \"none\", outline: \"none\" }}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TrashData;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport \"./Trash.css\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport TrashData from \"./TrashData\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { db } from \"./firebase\";\r\nimport { useStyles } from \"@material-ui/pickers/views/Calendar/SlideTransition\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Trash() {\r\n  const [{ user }] = useStateValue();\r\n  const [trash, setTrash] = useState([]);\r\n\r\n  const history = useHistory();\r\n  if (!user) history.push(\"/login\");\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      db.collection(\"users\")\r\n        .doc(user?.uid)\r\n        .collection(\"trash\")\r\n        .onSnapshot((snapshot) =>\r\n          setTrash(snapshot.docs.map((note) => note.data()))\r\n        );\r\n    }\r\n  }, [user]);\r\n\r\n  const [snackPackDelete, setSnackPackDelete] = React.useState([]);\r\n  const [openDeleteSnackBar, setOpenDeleteSnackBar] = React.useState(false);\r\n  const [messageInfoDelete, setMessageInfoDelete] = React.useState(undefined);\r\n\r\n  React.useEffect(() => {\r\n    if (snackPackDelete.length && !messageInfoDelete) {\r\n      // Set a new snack when we don't have an active one\r\n      setMessageInfoDelete({ ...snackPackDelete[0] });\r\n      setSnackPackDelete((prev) => prev.slice(1));\r\n      setOpenDeleteSnackBar(true);\r\n    } else if (\r\n      snackPackDelete.length &&\r\n      messageInfoDelete &&\r\n      openDeleteSnackBar\r\n    ) {\r\n      // Close an active snack when a new one is added\r\n      setOpenDeleteSnackBar(false);\r\n    }\r\n  }, [snackPackDelete, messageInfoDelete, openDeleteSnackBar]);\r\n\r\n  const handleClickDelete = (message) => () => {\r\n    setSnackPackDelete((prev) => [\r\n      ...prev,\r\n      { message, key: new Date().getTime() },\r\n    ]);\r\n  };\r\n\r\n  const handleCloseDelete = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpenDeleteSnackBar(false);\r\n  };\r\n\r\n  const handleExitedDelete = () => {\r\n    setMessageInfoDelete(undefined);\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className=\"trash__notes\">\r\n      <center>\r\n        <h5 className=\"trash__message\">\r\n          Notes in trash are deleted after 7 days\r\n        </h5>\r\n      </center>\r\n      {trash.length !== 0 ? (\r\n        <div className=\"display__trash__notes\">\r\n          <TrashData\r\n            trashData={trash}\r\n            trash={true}\r\n            displayRestoreSnackBarMessage={handleClickDelete(\r\n              \"Restored from trash\"\r\n            )}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <span className=\"no__trash__placeholder\">\r\n          <DeleteIcon\r\n            style={{\r\n              fontSize: \"10rem\",\r\n              opacity: \"0.3\",\r\n              display: \"block\",\r\n              margin: \"auto\",\r\n              width: \"50%\",\r\n            }}\r\n          />\r\n          <h1>No notes in trash</h1>\r\n        </span>\r\n      )}\r\n\r\n      <Snackbar\r\n        key={messageInfoDelete ? messageInfoDelete.key : undefined}\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"left\",\r\n        }}\r\n        open={openDeleteSnackBar}\r\n        autoHideDuration={5000}\r\n        onClose={handleCloseDelete}\r\n        onExited={handleExitedDelete}\r\n        message={messageInfoDelete ? messageInfoDelete.message : undefined}\r\n        action={\r\n          <React.Fragment>\r\n            <IconButton\r\n              aria-label=\"close\"\r\n              color=\"inherit\"\r\n              className={classes.close}\r\n              onClick={handleCloseDelete}\r\n              style={{ border: \"none\", outline: \"none\" }}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </React.Fragment>\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Trash;\r\n","import { GridList } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DisplayCard from \"./DisplayCard\";\r\nimport { db } from \"./firebase\";\r\nimport \"./Notes.css\";\r\nimport { useStateValue } from \"./StateProvider\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  close: {\r\n    padding: theme.spacing(0.5),\r\n  },\r\n}));\r\n\r\nconst RemindersDisplayCards = ({\r\n  reminderDateDocs,\r\n  reminderTimeDocs,\r\n  reminderDateTimeDocs,\r\n}) => {\r\n  const [snackPackArchive, setSnackPackArchive] = React.useState([]);\r\n  const [openArchiveSnackBar, setOpenArchiveSnackBar] = React.useState(false);\r\n  const [messageInfoArchive, setMessageInfoArchive] = React.useState(undefined);\r\n\r\n  const [snackPackNewNoteArchive, setSnackPackNewNoteArchive] = React.useState(\r\n    []\r\n  );\r\n  const [\r\n    openNewNoteArchiveSnackBar,\r\n    setOpenNewNoteArchiveSnackBar,\r\n  ] = React.useState(false);\r\n  const [\r\n    messageInfoNewNoteArchive,\r\n    setMessageInfoNewNoteArchive,\r\n  ] = React.useState(undefined);\r\n\r\n  const [\r\n    snackPackUndoNewNoteArchive,\r\n    setSnackPackUndoNewNoteArchive,\r\n  ] = React.useState([]);\r\n  const [\r\n    openUndoNewNoteArchiveSnackBar,\r\n    setOpenUndoNewNoteArchiveSnackBar,\r\n  ] = React.useState(false);\r\n  const [\r\n    messageInfoUndoNewNoteArchive,\r\n    setMessageInfoUndoNewNoteArchive,\r\n  ] = React.useState(undefined);\r\n\r\n  const [snackPackUndoArchive, setSnackPackUndoArchive] = React.useState([]);\r\n  const [openUndoArchiveSnackBar, setOpenUndoArchiveSnackBar] = React.useState(\r\n    false\r\n  );\r\n  const [messageInfoUndoArchive, setMessageInfoUndoArchive] = React.useState(\r\n    undefined\r\n  );\r\n\r\n  const [snackPackUndoDelete, setSnackPackUndoDelete] = React.useState([]);\r\n  const [openUndoDeleteSnackBar, setOpenUndoDeleteSnackBar] = React.useState(\r\n    false\r\n  );\r\n  const [messageInfoUndoDelete, setMessageInfoUndoDelete] = React.useState(\r\n    undefined\r\n  );\r\n\r\n  const [snackPackDelete, setSnackPackDelete] = React.useState([]);\r\n  const [openDeleteSnackBar, setOpenDeleteSnackBar] = React.useState(false);\r\n  const [messageInfoDelete, setMessageInfoDelete] = React.useState(undefined);\r\n\r\n  const [{ user }, dispatch] = useStateValue();\r\n  const [notes, setNotes] = useState([]);\r\n\r\n  const [newNoteIdInArchiveSnackBar, setNewNoteIdInArchiveSnackBar] = useState(\r\n    {}\r\n  );\r\n  const [\r\n    displayNoteIdInArchiveSnackBar,\r\n    setDisplayNoteIdInArchiveSnackBar,\r\n  ] = useState({});\r\n  const [\r\n    displayNoteIdInDeleteSnackBar,\r\n    setDisplayNoteIdInDeleteSnackBar,\r\n  ] = useState({});\r\n\r\n  React.useEffect(() => {\r\n    if (snackPackArchive.length && !messageInfoArchive) {\r\n      // Set a new snack when we don't have an active one\r\n      setMessageInfoArchive({ ...snackPackArchive[0] });\r\n      setSnackPackArchive((prev) => prev.slice(1));\r\n      setOpenArchiveSnackBar(true);\r\n    } else if (\r\n      snackPackArchive.length &&\r\n      messageInfoArchive &&\r\n      openArchiveSnackBar\r\n    ) {\r\n      // Close an active snack when a new one is added\r\n      setOpenArchiveSnackBar(false);\r\n    }\r\n  }, [snackPackArchive, messageInfoArchive, openArchiveSnackBar]);\r\n\r\n  const handleClickArchive = (message) => () => {\r\n    setSnackPackArchive((prev) => [\r\n      ...prev,\r\n      { message, key: new Date().getTime() },\r\n    ]);\r\n  };\r\n\r\n  const handleCloseArchive = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpenArchiveSnackBar(false);\r\n  };\r\n\r\n  const handleExitedArchive = () => {\r\n    setMessageInfoArchive(undefined);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (snackPackUndoArchive.length && !messageInfoUndoArchive) {\r\n      // Set a new snack when we don't have an active one\r\n      setMessageInfoUndoArchive({ ...snackPackUndoArchive[0] });\r\n      setSnackPackUndoArchive((prev) => prev.slice(1));\r\n      setOpenUndoArchiveSnackBar(true);\r\n    } else if (\r\n      snackPackUndoArchive.length &&\r\n      messageInfoUndoArchive &&\r\n      openUndoArchiveSnackBar\r\n    ) {\r\n      // Close an active snack when a new one is added\r\n      setOpenUndoArchiveSnackBar(false);\r\n    }\r\n  }, [snackPackUndoArchive, messageInfoUndoArchive, openUndoArchiveSnackBar]);\r\n\r\n  const handleClickUndoArchive = (message) => () => {\r\n    handleCloseArchive();\r\n    setSnackPackUndoArchive((prev) => [\r\n      ...prev,\r\n      { message, key: new Date().getTime() },\r\n    ]);\r\n    db.collection(\"users\")\r\n      .doc(user?.uid)\r\n      .collection(\"notes\")\r\n      .doc(displayNoteIdInArchiveSnackBar.id)\r\n      .set(displayNoteIdInArchiveSnackBar);\r\n    db.collection(\"users\")\r\n      .doc(user?.uid)\r\n      .collection(\"archives\")\r\n      .doc(displayNoteIdInArchiveSnackBar.id)\r\n      .delete();\r\n  };\r\n\r\n  const handleCloseUndoArchive = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpenUndoArchiveSnackBar(false);\r\n  };\r\n\r\n  const handleExitedUndoArchive = () => {\r\n    setMessageInfoUndoArchive(undefined);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (snackPackUndoDelete.length && !messageInfoUndoDelete) {\r\n      // Set a new snack when we don't have an active one\r\n      setMessageInfoUndoDelete({ ...snackPackUndoDelete[0] });\r\n      setSnackPackUndoDelete((prev) => prev.slice(1));\r\n      setOpenUndoDeleteSnackBar(true);\r\n    } else if (\r\n      snackPackUndoDelete.length &&\r\n      messageInfoUndoDelete &&\r\n      openUndoDeleteSnackBar\r\n    ) {\r\n      // Close an active snack when a new one is added\r\n      setOpenUndoDeleteSnackBar(false);\r\n    }\r\n  }, [snackPackUndoDelete, messageInfoUndoDelete, openUndoDeleteSnackBar]);\r\n\r\n  const handleClickUndoDelete = (message) => () => {\r\n    handleCloseDelete();\r\n    setSnackPackUndoDelete((prev) => [\r\n      ...prev,\r\n      { message, key: new Date().getTime() },\r\n    ]);\r\n    db.collection(\"users\")\r\n      .doc(user?.uid)\r\n      .collection(\"notes\")\r\n      .doc(displayNoteIdInDeleteSnackBar.id)\r\n      .set(displayNoteIdInDeleteSnackBar);\r\n    db.collection(\"users\")\r\n\r\n      .doc(user?.uid)\r\n      .collection(\"trash\")\r\n      .doc(displayNoteIdInDeleteSnackBar.id)\r\n      .delete();\r\n  };\r\n\r\n  const handleCloseUndoDelete = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpenUndoDeleteSnackBar(false);\r\n  };\r\n\r\n  const handleExitedUndoDelete = () => {\r\n    setMessageInfoUndoDelete(undefined);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (snackPackDelete.length && !messageInfoDelete) {\r\n      // Set a new snack when we don't have an active one\r\n      setMessageInfoDelete({ ...snackPackDelete[0] });\r\n      setSnackPackDelete((prev) => prev.slice(1));\r\n      setOpenDeleteSnackBar(true);\r\n    } else if (\r\n      snackPackDelete.length &&\r\n      messageInfoDelete &&\r\n      openDeleteSnackBar\r\n    ) {\r\n      // Close an active snack when a new one is added\r\n      setOpenDeleteSnackBar(false);\r\n    }\r\n  }, [snackPackDelete, messageInfoDelete, openDeleteSnackBar]);\r\n\r\n  const handleClickDelete = (message) => () => {\r\n    setSnackPackDelete((prev) => [\r\n      ...prev,\r\n      { message, key: new Date().getTime() },\r\n    ]);\r\n  };\r\n\r\n  const handleCloseDelete = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpenDeleteSnackBar(false);\r\n  };\r\n\r\n  const handleExitedDelete = () => {\r\n    setMessageInfoDelete(undefined);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (snackPackNewNoteArchive.length && !messageInfoNewNoteArchive) {\r\n      // Set a new snack when we don't have an active one\r\n      setMessageInfoNewNoteArchive({ ...snackPackNewNoteArchive[0] });\r\n      setSnackPackNewNoteArchive((prev) => prev.slice(1));\r\n      setOpenNewNoteArchiveSnackBar(true);\r\n    } else if (\r\n      snackPackNewNoteArchive.length &&\r\n      messageInfoNewNoteArchive &&\r\n      openNewNoteArchiveSnackBar\r\n    ) {\r\n      // Close an active snack when a new one is added\r\n      setOpenNewNoteArchiveSnackBar(false);\r\n    }\r\n  }, [\r\n    snackPackNewNoteArchive,\r\n    messageInfoNewNoteArchive,\r\n    openNewNoteArchiveSnackBar,\r\n  ]);\r\n\r\n  const handleClickNewNoteArchive = (message) => () => {\r\n    setSnackPackNewNoteArchive((prev) => [\r\n      ...prev,\r\n      { message, key: new Date().getTime() },\r\n    ]);\r\n  };\r\n\r\n  const handleCloseNewNoteArchive = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpenNewNoteArchiveSnackBar(false);\r\n  };\r\n\r\n  const handleExitedNewNoteArchive = () => {\r\n    setMessageInfoNewNoteArchive(undefined);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (snackPackNewNoteArchive.length && !messageInfoNewNoteArchive) {\r\n      // Set a new snack when we don't have an active one\r\n      setMessageInfoUndoNewNoteArchive({ ...snackPackUndoNewNoteArchive[0] });\r\n      setSnackPackUndoNewNoteArchive((prev) => prev.slice(1));\r\n      setOpenUndoNewNoteArchiveSnackBar(true);\r\n    } else if (\r\n      snackPackUndoNewNoteArchive.length &&\r\n      messageInfoUndoNewNoteArchive &&\r\n      openUndoNewNoteArchiveSnackBar\r\n    ) {\r\n      // Close an active snack when a new one is added\r\n      setOpenUndoNewNoteArchiveSnackBar(false);\r\n    }\r\n  }, [\r\n    snackPackUndoNewNoteArchive,\r\n    messageInfoUndoNewNoteArchive,\r\n    openUndoNewNoteArchiveSnackBar,\r\n  ]);\r\n\r\n  const handleClickUndoNewNoteArchive = (message) => () => {\r\n    handleCloseUndoNewNoteArchive();\r\n    setSnackPackUndoNewNoteArchive((prev) => [\r\n      ...prev,\r\n      { message, key: new Date().getTime() },\r\n    ]);\r\n    db.collection(\"users\")\r\n      .doc(user?.uid)\r\n      .collection(\"notes\")\r\n      .doc(newNoteIdInArchiveSnackBar.id)\r\n      .set(newNoteIdInArchiveSnackBar);\r\n    db.collection(\"users\")\r\n      .doc(user?.uid)\r\n      .collection(\"archives\")\r\n      .doc(newNoteIdInArchiveSnackBar.id)\r\n      .delete();\r\n  };\r\n\r\n  const handleCloseUndoNewNoteArchive = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpenUndoNewNoteArchiveSnackBar(false);\r\n  };\r\n\r\n  const handleExitedUndoNewNoteArchive = () => {\r\n    setMessageInfoUndoNewNoteArchive(undefined);\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      db.collection(\"users\")\r\n        .doc(user?.uid)\r\n        .collection(\"notes\")\r\n        .onSnapshot((snapshot) =>\r\n          setNotes(snapshot.docs.map((note) => note.data()))\r\n        );\r\n    }\r\n  }, [user]);\r\n\r\n  console.log(notes);\r\n\r\n  return (\r\n    <div className=\"notes\">\r\n      <div className=\"notes__display\">\r\n        {reminderDateTimeDocs.length !== 0 ? (\r\n          <>\r\n            <hr />\r\n            <strong>\r\n              <p>DATE AND TIME</p>\r\n            </strong>\r\n          </>\r\n        ) : null}\r\n        <GridList cols={1} cellHeight=\"auto\">\r\n          {reminderDateTimeDocs.map((note) => (\r\n            <DisplayCard\r\n              key={note.id}\r\n              id={note.id}\r\n              previoustitle={note.title}\r\n              previousnote={note.note}\r\n              previousdisplayTags={note.labels}\r\n              previousbackgroundColor={note.backgroundColor}\r\n              previousreminderDate={note.reminderDate}\r\n              previousreminderTime={note.reminderTime}\r\n              previouspinnedStatus={note.isPinned}\r\n              displayDeletedSnackBarMessage={handleClickDelete(\r\n                \"Moved to trash\"\r\n              )}\r\n              setDisplayNoteIdInDeleteSnackBar={(data) =>\r\n                setDisplayNoteIdInDeleteSnackBar(\r\n                  JSON.parse(JSON.stringify(data))\r\n                )\r\n              }\r\n              setDisplayNoteIdInArchiveSnackBar={(data) =>\r\n                setDisplayNoteIdInArchiveSnackBar(\r\n                  JSON.parse(JSON.stringify(data))\r\n                )\r\n              }\r\n              displayArchivedSnackBarMessage={handleClickArchive(\r\n                \"Note Archived\"\r\n              )}\r\n            />\r\n          ))}\r\n        </GridList>\r\n        {reminderDateDocs.length !== 0 ? (\r\n          <>\r\n            <hr />\r\n            <strong>\r\n              <p>DATE</p>\r\n            </strong>\r\n          </>\r\n        ) : null}\r\n        <GridList cols={1} cellHeight=\"auto\">\r\n          {reminderDateDocs.map((note) => (\r\n            <DisplayCard\r\n              key={note.id}\r\n              id={note.id}\r\n              previoustitle={note.title}\r\n              previousnote={note.note}\r\n              previousdisplayTags={note.labels}\r\n              previousbackgroundColor={note.backgroundColor}\r\n              previousreminderDate={note.reminderDate}\r\n              previousreminderTime={note.reminderTime}\r\n              previouspinnedStatus={note.isPinned}\r\n              displayDeletedSnackBarMessage={handleClickDelete(\r\n                \"Moved to trash\"\r\n              )}\r\n              setDisplayNoteIdInDeleteSnackBar={(data) =>\r\n                setDisplayNoteIdInDeleteSnackBar(\r\n                  JSON.parse(JSON.stringify(data))\r\n                )\r\n              }\r\n              setDisplayNoteIdInArchiveSnackBar={(data) =>\r\n                setDisplayNoteIdInArchiveSnackBar(\r\n                  JSON.parse(JSON.stringify(data))\r\n                )\r\n              }\r\n              displayArchivedSnackBarMessage={handleClickArchive(\r\n                \"Note Archived\"\r\n              )}\r\n            />\r\n          ))}\r\n        </GridList>\r\n        {reminderTimeDocs.length !== 0 ? (\r\n          <>\r\n            <hr />\r\n            <strong>\r\n              <p>TIME</p>\r\n            </strong>\r\n          </>\r\n        ) : null}\r\n        <GridList cols={1} cellHeight=\"auto\">\r\n          {reminderTimeDocs.map((note) => (\r\n            <DisplayCard\r\n              key={note.id}\r\n              id={note.id}\r\n              previoustitle={note.title}\r\n              previousnote={note.note}\r\n              previousdisplayTags={note.labels}\r\n              previousbackgroundColor={note.backgroundColor}\r\n              previousreminderDate={note.reminderDate}\r\n              previousreminderTime={note.reminderTime}\r\n              previouspinnedStatus={note.isPinned}\r\n              displayDeletedSnackBarMessage={handleClickDelete(\r\n                \"Moved to trash\"\r\n              )}\r\n              setDisplayNoteIdInDeleteSnackBar={(data) =>\r\n                setDisplayNoteIdInDeleteSnackBar(\r\n                  JSON.parse(JSON.stringify(data))\r\n                )\r\n              }\r\n              setDisplayNoteIdInArchiveSnackBar={(data) =>\r\n                setDisplayNoteIdInArchiveSnackBar(\r\n                  JSON.parse(JSON.stringify(data))\r\n                )\r\n              }\r\n              displayArchivedSnackBarMessage={handleClickArchive(\r\n                \"Note Archived\"\r\n              )}\r\n            />\r\n          ))}\r\n        </GridList>\r\n        <Snackbar\r\n          key={messageInfoArchive ? messageInfoArchive.key : undefined}\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"left\",\r\n          }}\r\n          open={openArchiveSnackBar}\r\n          autoHideDuration={5000}\r\n          onClose={handleCloseArchive}\r\n          onExited={handleExitedArchive}\r\n          message={messageInfoArchive ? messageInfoArchive.message : undefined}\r\n          action={\r\n            <React.Fragment>\r\n              <Button\r\n                color=\"inherit\"\r\n                size=\"small\"\r\n                onClick={handleClickUndoArchive(\"Note Unarchived\")}\r\n                style={{ border: \"none\", outline: \"none\" }}\r\n              >\r\n                UNDO\r\n              </Button>\r\n              <IconButton\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                className={classes.close}\r\n                onClick={handleCloseArchive}\r\n                style={{ border: \"none\", outline: \"none\" }}\r\n              >\r\n                <CloseIcon />\r\n              </IconButton>\r\n            </React.Fragment>\r\n          }\r\n        />\r\n\r\n        <Snackbar\r\n          key={messageInfoUndoArchive ? messageInfoUndoArchive.key : undefined}\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"left\",\r\n          }}\r\n          open={openUndoArchiveSnackBar}\r\n          autoHideDuration={5000}\r\n          onClose={handleCloseUndoArchive}\r\n          onExited={handleExitedUndoArchive}\r\n          message={\r\n            messageInfoUndoArchive ? messageInfoUndoArchive.message : undefined\r\n          }\r\n          action={\r\n            <React.Fragment>\r\n              <IconButton\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                className={classes.close}\r\n                onClick={handleCloseUndoArchive}\r\n                style={{ border: \"none\", outline: \"none\" }}\r\n              >\r\n                <CloseIcon />\r\n              </IconButton>\r\n            </React.Fragment>\r\n          }\r\n        />\r\n\r\n        <Snackbar\r\n          key={messageInfoUndoDelete ? messageInfoUndoDelete.key : undefined}\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"left\",\r\n          }}\r\n          open={openUndoDeleteSnackBar}\r\n          autoHideDuration={5000}\r\n          onClose={handleCloseUndoDelete}\r\n          onExited={handleExitedUndoDelete}\r\n          message={\r\n            messageInfoUndoDelete ? messageInfoUndoDelete.message : undefined\r\n          }\r\n          action={\r\n            <React.Fragment>\r\n              <IconButton\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                className={classes.close}\r\n                onClick={handleCloseUndoDelete}\r\n                style={{ border: \"none\", outline: \"none\" }}\r\n              >\r\n                <CloseIcon />\r\n              </IconButton>\r\n            </React.Fragment>\r\n          }\r\n        />\r\n\r\n        <Snackbar\r\n          key={messageInfoDelete ? messageInfoDelete.key : undefined}\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"left\",\r\n          }}\r\n          open={openDeleteSnackBar}\r\n          autoHideDuration={5000}\r\n          onClose={handleCloseDelete}\r\n          onExited={handleExitedDelete}\r\n          message={messageInfoDelete ? messageInfoDelete.message : undefined}\r\n          action={\r\n            <React.Fragment>\r\n              <Button\r\n                color=\"inherit\"\r\n                size=\"small\"\r\n                onClick={handleClickUndoDelete(\"Restored from trash\")}\r\n                style={{ border: \"none\", outline: \"none\" }}\r\n              >\r\n                UNDO\r\n              </Button>\r\n              <IconButton\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                className={classes.close}\r\n                onClick={handleCloseDelete}\r\n                style={{ border: \"none\", outline: \"none\" }}\r\n              >\r\n                <CloseIcon />\r\n              </IconButton>\r\n            </React.Fragment>\r\n          }\r\n        />\r\n\r\n        <Snackbar\r\n          key={\r\n            messageInfoNewNoteArchive\r\n              ? messageInfoNewNoteArchive.key\r\n              : undefined\r\n          }\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"left\",\r\n          }}\r\n          open={openNewNoteArchiveSnackBar}\r\n          autoHideDuration={5000}\r\n          onClose={handleCloseNewNoteArchive}\r\n          onExited={handleExitedNewNoteArchive}\r\n          message={\r\n            messageInfoNewNoteArchive\r\n              ? messageInfoNewNoteArchive.message\r\n              : undefined\r\n          }\r\n          action={\r\n            <React.Fragment>\r\n              <Button\r\n                color=\"inherit\"\r\n                size=\"small\"\r\n                onClick={handleClickUndoNewNoteArchive(\"Note Unarchived\")}\r\n                style={{ border: \"none\", outline: \"none\" }}\r\n              >\r\n                UNDO\r\n              </Button>\r\n              <IconButton\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                className={classes.close}\r\n                onClick={handleCloseNewNoteArchive}\r\n                style={{ border: \"none\", outline: \"none\" }}\r\n              >\r\n                <CloseIcon />\r\n              </IconButton>\r\n            </React.Fragment>\r\n          }\r\n        />\r\n\r\n        <Snackbar\r\n          key={\r\n            messageInfoUndoNewNoteArchive\r\n              ? messageInfoUndoNewNoteArchive.key\r\n              : undefined\r\n          }\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"left\",\r\n          }}\r\n          open={openUndoNewNoteArchiveSnackBar}\r\n          autoHideDuration={5000}\r\n          onClose={handleCloseUndoNewNoteArchive}\r\n          onExited={handleExitedUndoNewNoteArchive}\r\n          message={\r\n            messageInfoUndoNewNoteArchive\r\n              ? messageInfoUndoNewNoteArchive.message\r\n              : undefined\r\n          }\r\n          action={\r\n            <React.Fragment>\r\n              <IconButton\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                className={classes.close}\r\n                onClick={handleCloseUndoNewNoteArchive}\r\n                style={{ border: \"none\", outline: \"none\" }}\r\n              >\r\n                <CloseIcon />\r\n              </IconButton>\r\n            </React.Fragment>\r\n          }\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RemindersDisplayCards;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport { db } from \"./firebase\";\r\nimport \"./Reminders.css\";\r\nimport RemindersDisplayCards from \"./RemindersDisplayCards\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Reminders() {\r\n  const [{ user }] = useStateValue();\r\n\r\n  const history = useHistory();\r\n  if (!user) history.push(\"/login\");\r\n\r\n  const [reminderDate, setReminderDate] = useState([]);\r\n  const [reminderTime, setReminderTime] = useState([]);\r\n  const [reminderDateTime, setReminderDateTime] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      db.collection(\"users\")\r\n        .doc(user?.uid)\r\n        .collection(\"notes\")\r\n        .where(\"remindBy\", \"==\", \"date\")\r\n        .onSnapshot((snapshot) =>\r\n          setReminderDate(snapshot.docs.map((note) => note.data()))\r\n        );\r\n\r\n      db.collection(\"users\")\r\n        .doc(user?.uid)\r\n        .collection(\"notes\")\r\n        .where(\"remindBy\", \"==\", \"time\")\r\n        .onSnapshot((snapshot) =>\r\n          setReminderTime(snapshot.docs.map((note) => note.data()))\r\n        );\r\n\r\n      db.collection(\"users\")\r\n        .doc(user?.uid)\r\n        .collection(\"notes\")\r\n        .where(\"remindBy\", \"==\", \"dateAndTime\")\r\n        .onSnapshot((snapshot) =>\r\n          setReminderDateTime(snapshot.docs.map((note) => note.data()))\r\n        );\r\n    }\r\n  }, [user]);\r\n\r\n  console.log(reminderTime);\r\n  console.log(reminderDate);\r\n\r\n  return (\r\n    <div className=\"reminders__notes\">\r\n      {reminderTime.length !== 0 ||\r\n      reminderDate.length !== 0 ||\r\n      reminderDateTime.length !== 0 ? (\r\n        <div className=\"display__reminders__notes\">\r\n          <RemindersDisplayCards\r\n            reminderDateDocs={reminderDate}\r\n            reminderTimeDocs={reminderTime}\r\n            reminderDateTimeDocs={reminderDateTime}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <span className=\"no__reminders__placeholder\">\r\n          <NotificationsIcon\r\n            style={{\r\n              fontSize: \"10rem\",\r\n              opacity: \"0.3\",\r\n              display: \"block\",\r\n              margin: \"auto\",\r\n              width: \"50%\",\r\n            }}\r\n          />\r\n          <h1>Notes with upcoming reminders appear here</h1>\r\n        </span>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Reminders;\r\n","import React from \"react\";\r\nimport \"./PageNotFound.css\";\r\n\r\nconst PageNotFound = () => {\r\n  return (\r\n    <div className=\"pagenotfound\">\r\n      <div className=\"pagenotfound__left\">\r\n        <img\r\n          src=\"https://logo-logos.com/wp-content/uploads/2016/11/Google_logo_logotype.png\"\r\n          alt=\"\"\r\n        />\r\n        <p>\r\n          <strong>404.</strong> That's an error.\r\n        </p>\r\n        <p>\r\n          The requested url was not found on this server. That's all we know\r\n        </p>\r\n      </div>\r\n      <img\r\n        className=\"pagenotfound__right\"\r\n        src=\"https://ih1.redbubble.net/image.1191542944.6942/raf,750x1000,075,t,FFFFFF:97ab1c12de.jpg\"\r\n        alt=\"pagenotfound\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageNotFound;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Header from \"./Header\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Notes from \"./Notes\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport Archives from \"./Archives\";\nimport Trash from \"./Trash\";\nimport Reminders from \"./Reminders\";\nimport PageNotFound from \"./PageNotFound\";\n\nfunction App() {\n  return (\n    <div>\n      <Switch>\n        <Route path=\"/reminders\">\n          <Header />\n          <Reminders />\n        </Route>\n        <Route path=\"/archives\">\n          <Header />\n          <Archives />\n        </Route>\n        <Route path=\"/trash\">\n          <Header />\n          <Trash />\n        </Route>\n        <Route path=\"/notes\">\n          <Header />\n          <Notes />\n        </Route>\n        <Route path=\"/login\">\n          <Login />\n        </Route>\n        <Route path=\"/register\">\n          <Register />\n        </Route>\n        <Route exact path=\"/\">\n          <Header />\n          <Notes />\n        </Route>\n        <Route>\n          <PageNotFound />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// initial object state\r\nexport const initialState = {\r\n    user: null,\r\n    view: \"grid\",\r\n    mode: \"light\"\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n\r\n    console.log(action);\r\n    switch (action.type) {\r\n\r\n        //action type\r\n        case 'SET_USER':\r\n\r\n            return {\r\n                ...state, //previous state\r\n                user: action.user //state with changes\r\n            }\r\n\r\n        case 'SET_VIEW':\r\n\r\n            return {\r\n                ...state,\r\n                view: action.view\r\n            }\r\n\r\n        case 'SET_MODE':\r\n\r\n            return {\r\n                ...state,\r\n                mode: action.mode\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { StateProvider } from './StateProvider';\nimport reducer, { initialState } from './reducer';\n\nReactDOM.render(\n  <>\n    <React.StrictMode>\n      <StateProvider initialState={initialState} reducer={reducer} >\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </StateProvider>\n    </React.StrictMode>\n  </>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}